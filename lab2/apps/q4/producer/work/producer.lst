 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 377
    4                      ; Text size: 4820
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  48656c6c	.ascii "HelloWorld\000"
   82  00003004  6f576f72	
   82  00003008  6c6400  	
   83  0000300b          	.align 2
   84  0000300c          	LC1_LF0:
   85  0000300c  55736167	.ascii "Usage: \000"
   85  00003010  653a2000	
   86  00003014          	.align 2
   87  00003014          	LC2_LF0:
   88  00003014  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
   88  00003018  6e646c65	
   88  0000301c  5f746f5f	
   88  00003020  73686172	
   88  00003024  65645f6d	
   88  00003028  656d6f72	
   88  0000302c  795f7061	
   88  00003030  67653e20	
   88  00003034  3c68616e	
   88  00003038  646c655f	
   88  0000303c  746f5f70	
   88  00003040  6167655f	
   88  00003044  6d617070	
   88  00003048  65645f73	
   88  0000304c  656d6170	
   88  00003050  686f7265	
   88  00003054  3e203c68	
   88  00003058  616e    	
   89  0000305a  646c655f	.ascii "dle_to_page_mapped_lock> <handle_to_page_mapped_cond_var> <handle_to_p"
   89  0000305e  746f5f70	
   89  00003062  6167655f	
   89  00003066  6d617070	
   89  0000306a  65645f6c	
   89  0000306e  6f636b3e	
   89  00003072  203c6861	
   89  00003076  6e646c65	
   89  0000307a  5f746f5f	
   89  0000307e  70616765	
   89  00003082  5f6d6170	
   89  00003086  7065645f	
   89  0000308a  636f6e64	
   89  0000308e  5f766172	
   89  00003092  3e203c68	
   89  00003096  616e646c	
   89  0000309a  655f746f	
   89  0000309e  5f70    	
   90  000030a0  6167655f	.ascii "age_mapped_cond_var>\n\000"
   90  000030a4  6d617070	
   90  000030a8  65645f63	
   90  000030ac  6f6e645f	
   90  000030b0  7661723e	
   90  000030b4  0a00    	
   91  000030b6          	.align 2
   92  000030b8          	LC3_LF0:
   93  000030b8  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   93  000030bc  64206e6f	
   93  000030c0  74206d61	
   93  000030c4  70207468	
   93  000030c8  65207669	
   93  000030cc  72747561	
   93  000030d0  6c206164	
   93  000030d4  64726573	
   93  000030d8  7320746f	
   93  000030dc  20746865	
   93  000030e0  206d656d	
   93  000030e4  6f727920	
   93  000030e8  696e2000	
   94  000030ec          	.align 2
   95  000030ec          	LC4_LF0:
   96  000030ec  2c206578	.ascii ", exiting...\n\000"
   96  000030f0  6974696e	
   96  000030f4  672e2e2e	
   96  000030f8  0a00    	
   97  000030fa          	.align 2
   98  000030fc          	LC5_LF0:
   99  000030fc  70726f64	.ascii "producer: My PID is %d\n\000"
   99  00003100  75636572	
   99  00003104  3a204d79	
   99  00003108  20504944	
   99  0000310c  20697320	
   99  00003110  25640a00	
  100  00003114          	.align 2
  101  00003114          	LC6_LF0:
  102  00003114  70726f64	.ascii "producer %d inserted: %c\n\000"
  102  00003118  75636572	
  102  0000311c  20256420	
  102  00003120  696e7365	
  102  00003124  72746564	
  102  00003128  3a202563	
  102  0000312c  0a00    	
  103  0000312e          	.align 2
  104  00003130          	LC7_LF0:
  105  00003130  70726f64	.ascii "producer: PID %d is complete.\n\000"
  105  00003134  75636572	
  105  00003138  3a205049	
  105  0000313c  44202564	
  105  00003140  20697320	
  105  00003144  636f6d70	
  105  00003148  6c657465	
  105  0000314c  2e0a00  	
  106  0000314f          	.align 2
  107  00003150          	LC8_LF0:
  108  00003150  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  108  00003154  73656d61	
  108  00003158  70686f72	
  108  0000315c  6520735f	
  108  00003160  70726f63	
  108  00003164  735f636f	
  108  00003168  6d706c65	
  108  0000316c  74656420	
  108  00003170  28256429	
  108  00003174  20696e20	
  108  00003178  00      	
  109  00003179          	.text
  110  000010d4          	.align 2
  111  000010d4          	.proc _main
  112  000010d4          	.global _main
  113  000010d4          	_main:
  114                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  115  000010d4  afbefffc	sw	-4(r29),r30; push fp
  116  000010d8  001df020	add	r30,r0,r29; fp = sp
  117  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  118  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  119  000010e4  8fc20000	lw	r2,(r30)
  120  000010e8  8fc90004	lw	r9,4(r30)
  121  000010ec  0c0011dc	jal	___main
  122  000010f0  54000000	nop; not filled.
  123  000010f4  3c010000	lhi	r1,((LC0_LF0)>>16)&0xffff
  124  000010f8  24213000	addui	r1,r1,(LC0_LF0)&0xffff
  125  000010fc  802d0000	lb	r13,(r1)
  126  00001100  a3cdffe8	sb	-24(r30),r13
  127  00001104  802d0001	lb	r13,1(r1)
  128  00001108  a3cdffe9	sb	-23(r30),r13
  129  0000110c  802d0002	lb	r13,2(r1)
  130  00001110  a3cdffea	sb	-22(r30),r13
  131  00001114  802d0003	lb	r13,3(r1)
  132  00001118  a3cdffeb	sb	-21(r30),r13
  133  0000111c  802d0004	lb	r13,4(r1)
  134  00001120  a3cdffec	sb	-20(r30),r13
  135  00001124  802d0005	lb	r13,5(r1)
  136  00001128  a3cdffed	sb	-19(r30),r13
  137  0000112c  802d0006	lb	r13,6(r1)
  138  00001130  a3cdffee	sb	-18(r30),r13
  139  00001134  802d0007	lb	r13,7(r1)
  140  00001138  a3cdffef	sb	-17(r30),r13
  141  0000113c  802d0008	lb	r13,8(r1)
  142  00001140  a3cdfff0	sb	-16(r30),r13
  143  00001144  802d0009	lb	r13,9(r1)
  144  00001148  a3cdfff1	sb	-15(r30),r13
  145  0000114c  8021000a	lb	r1,10(r1)
  146  00001150  a3c1fff2	sb	-14(r30),r1
  147  00001154  20060000	addi	r6,r0,#0
  148  00001158  64410006	snei	r1,r2,#6
  149  0000115c  1020004c	beqz	r1,L14_LF0
  150  00001160  54000000	nop; not filled.
  151  00001164  23bdfff8	addi	r29,r29,#-8
  152  00001168  3c0d0000	lhi	r13,((LC1_LF0)>>16)&0xffff
  153  0000116c  25ad300c	addui	r13,r13,(LC1_LF0)&0xffff
  154  00001170  afad0000	sw	(r29),r13
  155  00001174  0c00034c	jal	_Printf
  156  00001178  54000000	nop; not filled.
  157  0000117c  8d2d0000	lw	r13,(r9)
  158  00001180  afad0000	sw	(r29),r13
  159  00001184  0c00033c	jal	_Printf
  160  00001188  54000000	nop; not filled.
  161  0000118c  3c0d0000	lhi	r13,((LC2_LF0)>>16)&0xffff
  162  00001190  25ad3014	addui	r13,r13,(LC2_LF0)&0xffff
  163  00001194  afad0000	sw	(r29),r13
  164  00001198  0c000328	jal	_Printf
  165  0000119c  54000000	nop; not filled.
  166  000011a0  0c0003d4	jal	_Exit
  167  000011a4  54000000	nop; not filled.
  168  000011a8  23bd0008	addi	r29,r29,#8
  169  000011ac          	L14_LF0:
  170  000011ac  23bdfff0	addi	r29,r29,#-16
  171  000011b0  8d2d0004	lw	r13,4(r9)
  172  000011b4  afad0000	sw	(r29),r13
  173  000011b8  200d0000	addi	r13,r0,#0
  174  000011bc  afad0004	sw	4(r29),r13
  175  000011c0  200d000a	addi	r13,r0,#10
  176  000011c4  afad0008	sw	8(r29),r13
  177  000011c8  0c000c58	jal	_dstrtol
  178  000011cc  54000000	nop; not filled.
  179  000011d0  00011020	add	r2,r0,r1
  180  000011d4  8d2d0008	lw	r13,8(r9)
  181  000011d8  afad0000	sw	(r29),r13
  182  000011dc  200d0000	addi	r13,r0,#0
  183  000011e0  afad0004	sw	4(r29),r13
  184  000011e4  200d000a	addi	r13,r0,#10
  185  000011e8  afad0008	sw	8(r29),r13
  186  000011ec  0c000c34	jal	_dstrtol
  187  000011f0  54000000	nop; not filled.
  188  000011f4  00016020	add	r12,r0,r1
  189  000011f8  8d2d000c	lw	r13,12(r9)
  190  000011fc  afad0000	sw	(r29),r13
  191  00001200  200d0000	addi	r13,r0,#0
  192  00001204  afad0004	sw	4(r29),r13
  193  00001208  200d000a	addi	r13,r0,#10
  194  0000120c  afad0008	sw	8(r29),r13
  195  00001210  0c000c10	jal	_dstrtol
  196  00001214  54000000	nop; not filled.
  197  00001218  00013820	add	r7,r0,r1
  198  0000121c  8d2d0010	lw	r13,16(r9)
  199  00001220  afad0000	sw	(r29),r13
  200  00001224  200d0000	addi	r13,r0,#0
  201  00001228  afad0004	sw	4(r29),r13
  202  0000122c  200d000a	addi	r13,r0,#10
  203  00001230  afad0008	sw	8(r29),r13
  204  00001234  0c000bec	jal	_dstrtol
  205  00001238  54000000	nop; not filled.
  206  0000123c  00015820	add	r11,r0,r1
  207  00001240  8d2d0014	lw	r13,20(r9)
  208  00001244  afad0000	sw	(r29),r13
  209  00001248  200d0000	addi	r13,r0,#0
  210  0000124c  afad0004	sw	4(r29),r13
  211  00001250  200d000a	addi	r13,r0,#10
  212  00001254  afad0008	sw	8(r29),r13
  213  00001258  0c000bc8	jal	_dstrtol
  214  0000125c  54000000	nop; not filled.
  215  00001260  00015020	add	r10,r0,r1
  216  00001264  afa20000	sw	(r29),r2
  217  00001268  0c000288	jal	_shmat
  218  0000126c  54000000	nop; not filled.
  219  00001270  00012820	add	r5,r0,r1
  220  00001274  23bd0010	addi	r29,r29,#16
  221  00001278  64a10000	snei	r1,r5,#0
  222  0000127c  1420004c	bnez	r1,L15_LF0
  223  00001280  54000000	nop; not filled.
  224  00001284  23bdfff8	addi	r29,r29,#-8
  225  00001288  3c0d0000	lhi	r13,((LC3_LF0)>>16)&0xffff
  226  0000128c  25ad30b8	addui	r13,r13,(LC3_LF0)&0xffff
  227  00001290  afad0000	sw	(r29),r13
  228  00001294  0c00022c	jal	_Printf
  229  00001298  54000000	nop; not filled.
  230  0000129c  8d2d0000	lw	r13,(r9)
  231  000012a0  afad0000	sw	(r29),r13
  232  000012a4  0c00021c	jal	_Printf
  233  000012a8  54000000	nop; not filled.
  234  000012ac  3c0d0000	lhi	r13,((LC4_LF0)>>16)&0xffff
  235  000012b0  25ad30ec	addui	r13,r13,(LC4_LF0)&0xffff
  236  000012b4  afad0000	sw	(r29),r13
  237  000012b8  0c000208	jal	_Printf
  238  000012bc  54000000	nop; not filled.
  239  000012c0  0c0002b4	jal	_Exit
  240  000012c4  54000000	nop; not filled.
  241  000012c8  23bd0008	addi	r29,r29,#8
  242  000012cc          	L15_LF0:
  243  000012cc  0c000200	jal	_getpid
  244  000012d0  54000000	nop; not filled.
  245  000012d4  23bdfff8	addi	r29,r29,#-8
  246  000012d8  3c0d0000	lhi	r13,((LC5_LF0)>>16)&0xffff
  247  000012dc  25ad30fc	addui	r13,r13,(LC5_LF0)&0xffff
  248  000012e0  afad0000	sw	(r29),r13
  249  000012e4  afa10004	sw	4(r29),r1
  250  000012e8  0c0001d8	jal	_Printf
  251  000012ec  54000000	nop; not filled.
  252  000012f0  23bd0008	addi	r29,r29,#8
  253  000012f4  20080005	addi	r8,r0,#5
  254  000012f8  23c4ffe8	addi	r4,r30,#-24
  255  000012fc          	L19_LF0:
  256  000012fc  23bdfff8	addi	r29,r29,#-8
  257  00001300  afa70000	sw	(r29),r7
  258  00001304  0c000228	jal	_lock_acquire
  259  00001308  54000000	nop; not filled.
  260  0000130c  8ca10000	lw	r1,(r5)
  261  00001310  20230001	addi	r3,r1,#1
  262  00001314  00600035	movi2fp	f0,r3
  263  00001318  01000835	movi2fp	f1,r8
  264  0000131c  0401000f	div	f0,f0,f1
  265  00001320  00001034	movfp2i	r2,f0
  266  00001324  50410002	slli	r1,r2,#0x2
  267  00001328  00220820	add	r1,r1,r2
  268  0000132c  00611022	sub	r2,r3,r1
  269  00001330  8ca10004	lw	r1,4(r5)
  270  00001334  23bd0008	addi	r29,r29,#8
  271  00001338  00410828	seq	r1,r2,r1
  272  0000133c  10200018	beqz	r1,L20_LF0
  273  00001340  54000000	nop; not filled.
  274  00001344  23bdfff8	addi	r29,r29,#-8
  275  00001348  afaa0000	sw	(r29),r10
  276  0000134c  0c000204	jal	_cond_wait
  277  00001350  54000000	nop; not filled.
  278  00001354  23bd0008	addi	r29,r29,#8
  279  00001358          	L20_LF0:
  280  00001358  0c000174	jal	_getpid
  281  0000135c  54000000	nop; not filled.
  282  00001360  23bdfff0	addi	r29,r29,#-16
  283  00001364  3c0d0000	lhi	r13,((LC6_LF0)>>16)&0xffff
  284  00001368  25ad3114	addui	r13,r13,(LC6_LF0)&0xffff
  285  0000136c  afad0000	sw	(r29),r13
  286  00001370  afa10004	sw	4(r29),r1
  287  00001374  90810000	lbu	r1,(r4)
  288  00001378  afa10008	sw	8(r29),r1
  289  0000137c  0c000144	jal	_Printf
  290  00001380  54000000	nop; not filled.
  291  00001384  8ca10000	lw	r1,(r5)
  292  00001388  20230001	addi	r3,r1,#1
  293  0000138c  00600035	movi2fp	f0,r3
  294  00001390  01000835	movi2fp	f1,r8
  295  00001394  0401000f	div	f0,f0,f1
  296  00001398  00001034	movfp2i	r2,f0
  297  0000139c  50410002	slli	r1,r2,#0x2
  298  000013a0  00220820	add	r1,r1,r2
  299  000013a4  00610822	sub	r1,r3,r1
  300  000013a8  aca10000	sw	(r5),r1
  301  000013ac  00a10820	add	r1,r5,r1
  302  000013b0  808d0000	lb	r13,(r4)
  303  000013b4  a02d0008	sb	8(r1),r13
  304  000013b8  afab0000	sw	(r29),r11
  305  000013bc  0c0001a0	jal	_cond_signal
  306  000013c0  54000000	nop; not filled.
  307  000013c4  afa70000	sw	(r29),r7
  308  000013c8  0c000170	jal	_lock_release
  309  000013cc  54000000	nop; not filled.
  310  000013d0  23bd0010	addi	r29,r29,#16
  311  000013d4  20840001	addi	r4,r4,#1
  312  000013d8  20c60001	addi	r6,r6,#1
  313  000013dc  68c1000a	sltui	r1,r6,#10
  314  000013e0  1420ff18	bnez	r1,L19_LF0
  315  000013e4  54000000	nop; not filled.
  316  000013e8  0c0000e4	jal	_getpid
  317  000013ec  54000000	nop; not filled.
  318  000013f0  23bdfff8	addi	r29,r29,#-8
  319  000013f4  3c0d0000	lhi	r13,((LC7_LF0)>>16)&0xffff
  320  000013f8  25ad3130	addui	r13,r13,(LC7_LF0)&0xffff
  321  000013fc  afad0000	sw	(r29),r13
  322  00001400  afa10004	sw	4(r29),r1
  323  00001404  0c0000bc	jal	_Printf
  324  00001408  54000000	nop; not filled.
  325  0000140c  afac0000	sw	(r29),r12
  326  00001410  0c000104	jal	_sem_signal
  327  00001414  54000000	nop; not filled.
  328  00001418  23bd0008	addi	r29,r29,#8
  329  0000141c  64210001	snei	r1,r1,#1
  330  00001420  10200050	beqz	r1,L22_LF0
  331  00001424  54000000	nop; not filled.
  332  00001428  23bdfff8	addi	r29,r29,#-8
  333  0000142c  3c0d0000	lhi	r13,((LC8_LF0)>>16)&0xffff
  334  00001430  25ad3150	addui	r13,r13,(LC8_LF0)&0xffff
  335  00001434  afad0000	sw	(r29),r13
  336  00001438  afac0004	sw	4(r29),r12
  337  0000143c  0c000084	jal	_Printf
  338  00001440  54000000	nop; not filled.
  339  00001444  8d290000	lw	r9,(r9)
  340  00001448  afa90000	sw	(r29),r9
  341  0000144c  0c000074	jal	_Printf
  342  00001450  54000000	nop; not filled.
  343  00001454  3c0d0000	lhi	r13,((LC4_LF0)>>16)&0xffff
  344  00001458  25ad30ec	addui	r13,r13,(LC4_LF0)&0xffff
  345  0000145c  afad0000	sw	(r29),r13
  346  00001460  0c000060	jal	_Printf
  347  00001464  54000000	nop; not filled.
  348  00001468  0c00010c	jal	_Exit
  349  0000146c  54000000	nop; not filled.
  350  00001470  23bd0008	addi	r29,r29,#8
  351  00001474          	L22_LF0:
  352  00001474  0c000e48	jal	_exit
  353  00001478  54000000	nop
  354  0000147c          	.endproc _main
  355                      ;;;
  356                      ;;; Stub functions for DLX traps.
  357                      ;;;
  358                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  359                      ;;;
  360                      ;;; The traps such as Open and Close
  361                      ;;; (note the capital letters) are for use by user programs.  The traps
  362                      ;;; with names such as open and close (lower case) are for use by the OS.
  363                      ;;;
  366  0000147c          	.align 2
  368                      ;;; The following are the traps to be used by user-level programs
  369                      ;;;
  371  0000147c          	.align 2
  372  0000147c          	.proc _Open
  373  0000147c          	.global _Open
  374  0000147c          	_Open:
  375                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  376                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  377                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  378  0000147c  44000213	trap	#0x213
  379  00001480  4be00000	jr	r31
  380  00001484  54000000	nop
  381  00001488          	.endproc _Open
  383  00001488          	.proc _Close
  384  00001488          	.global _Close
  385  00001488          	_Close:
  386  00001488  44000214	trap	#0x214
  387  0000148c  4be00000	jr	r31
  388  00001490  54000000	nop
  389  00001494          	.endproc _Close
  391  00001494          	.proc _Read
  392  00001494          	.global _Read
  393  00001494          	_Read:
  394  00001494  44000210	trap	#0x210
  395  00001498  4be00000	jr	r31
  396  0000149c  54000000	nop
  397  000014a0          	.endproc _Read
  399  000014a0          	.proc _Write
  400  000014a0          	.global _Write
  401  000014a0          	_Write:
  402  000014a0  44000211	trap	#0x211
  403  000014a4  4be00000	jr	r31
  404  000014a8  54000000	nop
  405  000014ac          	.endproc _Write
  407  000014ac          	.proc _Lseek
  408  000014ac          	.global _Lseek
  409  000014ac          	_Lseek:
  410  000014ac  44000212	trap	#0x212
  411  000014b0  4be00000	jr	r31
  412  000014b4  54000000	nop
  413  000014b8          	.endproc _Lseek
  415  000014b8          	.proc _Putchar
  416  000014b8          	.global _Putchar
  417  000014b8          	_Putchar:
  418  000014b8  44000280	trap	#0x280
  419  000014bc  4be00000	jr	r31
  420  000014c0  54000000	nop
  421  000014c4          	.endproc _Putchar
  423  000014c4          	.proc _Printf
  424  000014c4          	.global _Printf
  425  000014c4          	_Printf:
  426  000014c4  44000201	trap	#0x201
  427  000014c8  4be00000	jr	r31
  428  000014cc  54000000	nop
  429  000014d0          	.endproc _Printf
  431  000014d0          	.proc _getpid
  432  000014d0          	.global _getpid
  433  000014d0          	_getpid:
  434  000014d0  44000431	trap	#0x431
  435  000014d4  4be00000	jr	r31
  436  000014d8  54000000	nop
  437  000014dc          	.endproc _getpid
  439  000014dc          	.proc _process_create
  440  000014dc          	.global _process_create
  441  000014dc          	_process_create:
  442  000014dc  44000432	trap	#0x432
  443  000014e0  4be00000	jr	r31
  444  000014e4  54000000	nop
  445  000014e8          	.endproc _process_create
  447  000014e8          	.proc _shmget
  448  000014e8          	.global _shmget
  449  000014e8          	_shmget:
  450  000014e8  44000440	trap	#0x440
  451  000014ec  4be00000	jr	r31
  452  000014f0  54000000	nop
  453  000014f4          	.endproc _shmget
  455  000014f4          	.proc _shmat
  456  000014f4          	.global _shmat
  457  000014f4          	_shmat:
  458  000014f4  44000441	trap	#0x441
  459  000014f8  4be00000	jr	r31
  460  000014fc  54000000	nop
  461  00001500          	.endproc _shmat
  463  00001500          	.proc _sem_create
  464  00001500          	.global _sem_create
  465  00001500          	_sem_create:
  466  00001500  44000450	trap	#0x450
  467  00001504  4be00000	jr	r31
  468  00001508  54000000	nop
  469  0000150c          	.endproc _sem_create
  471  0000150c          	.proc _sem_wait
  472  0000150c          	.global _sem_wait
  473  0000150c          	_sem_wait:
  474  0000150c  44000451	trap	#0x451
  475  00001510  4be00000	jr	r31
  476  00001514  54000000	nop
  477  00001518          	.endproc _sem_wait
  479  00001518          	.proc _sem_signal
  480  00001518          	.global _sem_signal
  481  00001518          	_sem_signal:
  482  00001518  44000452	trap	#0x452
  483  0000151c  4be00000	jr	r31
  484  00001520  54000000	nop
  485  00001524          	.endproc _sem_signal
  487  00001524          	.proc _lock_create
  488  00001524          	.global _lock_create
  489  00001524          	_lock_create:
  490  00001524  44000453	trap	#0x453
  491  00001528  4be00000	jr	r31
  492  0000152c  54000000	nop
  493  00001530          	.endproc _lock_create
  495  00001530          	.proc _lock_acquire
  496  00001530          	.global _lock_acquire
  497  00001530          	_lock_acquire:
  498  00001530  44000454	trap	#0x454
  499  00001534  4be00000	jr	r31
  500  00001538  54000000	nop
  501  0000153c          	.endproc _lock_acquire
  503  0000153c          	.proc _lock_release
  504  0000153c          	.global _lock_release
  505  0000153c          	_lock_release:
  506  0000153c  44000455	trap	#0x455
  507  00001540  4be00000	jr	r31
  508  00001544  54000000	nop
  509  00001548          	.endproc _lock_release
  511  00001548          	.proc _cond_create
  512  00001548          	.global _cond_create
  513  00001548          	_cond_create:
  514  00001548  44000456	trap	#0x456
  515  0000154c  4be00000	jr	r31
  516  00001550  54000000	nop
  517  00001554          	.endproc _cond_create
  519  00001554          	.proc _cond_wait
  520  00001554          	.global _cond_wait
  521  00001554          	_cond_wait:
  522  00001554  44000457	trap	#0x457
  523  00001558  4be00000	jr	r31
  524  0000155c  54000000	nop
  525  00001560          	.endproc _cond_wait
  527  00001560          	.proc _cond_signal
  528  00001560          	.global _cond_signal
  529  00001560          	_cond_signal:
  530  00001560  44000458	trap	#0x458
  531  00001564  4be00000	jr	r31
  532  00001568  54000000	nop
  533  0000156c          	.endproc _cond_signal
  535  0000156c          	.proc _cond_broadcast
  536  0000156c          	.global _cond_broadcast
  537  0000156c          	_cond_broadcast:
  538  0000156c  44000455	trap	#0x455
  539  00001570  4be00000	jr	r31
  540  00001574  54000000	nop
  541  00001578          	.endproc _cond_broadcast
  543  00001578          	.proc _Exit
  544  00001578          	.global _Exit
  545  00001578          	_Exit:
  546  00001578  44000500	trap	#0x500
  547  0000157c  4be00000	jr	r31
  548  00001580  54000000	nop
  549  00001584          	.endproc _Exit
  550                      ; Compiled by GCC
  552  00001584          	.align 2
  553  00001584          	.proc _isspace
  554  00001584          	.global _isspace
  555  00001584          	_isspace:
  556                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  557  00001584  afbefffc	sw	-4(r29),r30; push fp
  558  00001588  001df020	add	r30,r0,r29; fp = sp
  559  0000158c  afbffff8	sw	-8(r29),r31; push ret addr
  560  00001590  2fbd0018	subui	r29,r29,#24; alloc local storage
  561  00001594  afa20000	sw	0(r29),r2
  562  00001598  afa30004	sw	4(r29),r3
  563  0000159c  afa40008	sw	8(r29),r4
  564  000015a0  83c20003	lb	r2,3(r30)
  565  000015a4  20010000	addi	r1,r0,#0
  566  000015a8  304300ff	andi	r3,r2,#0x00ff
  567  000015ac  60640020	seqi	r4,r3,#32
  568  000015b0  1480002c	bnez	r4,L3_LF2
  569  000015b4  54000000	nop; delay slot nop
  570  000015b8  304300ff	andi	r3,r2,#0x00ff
  571  000015bc  60640009	seqi	r4,r3,#9
  572  000015c0  1480001c	bnez	r4,L3_LF2
  573  000015c4  54000000	nop; delay slot nop
  574  000015c8  304300ff	andi	r3,r2,#0x00ff
  575  000015cc  6064000a	seqi	r4,r3,#10
  576  000015d0  1480000c	bnez	r4,L3_LF2
  577  000015d4  54000000	nop; delay slot nop
  578  000015d8  08000008	j	L2_LF2
  579  000015dc  54000000	nop; delay slot nop
  580  000015e0          	L3_LF2:
  581  000015e0  20010001	addi	r1,r0,#1
  582  000015e4          	L2_LF2:
  583  000015e4  08000004	j	L1_LF2
  584  000015e8  54000000	nop; delay slot nop
  585  000015ec          	L1_LF2:
  586  000015ec  8fa20000	lw	r2,0(r29)
  587  000015f0  8fa30004	lw	r3,4(r29)
  588  000015f4  8fa40008	lw	r4,8(r29)
  589  000015f8  8fdffff8	lw	r31,-8(r30)
  590  000015fc  001ee820	add	r29,r0,r30
  591  00001600  8fdefffc	lw	r30,-4(r30)
  592  00001604  4be00000	jr	r31
  593  00001608  54000000	nop
  594  0000160c          	.endproc _isspace
  595  0000160c          	.align 2
  596  0000160c          	.proc _isxdigit
  597  0000160c          	.global _isxdigit
  598  0000160c          	_isxdigit:
  599                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  600  0000160c  afbefffc	sw	-4(r29),r30; push fp
  601  00001610  001df020	add	r30,r0,r29; fp = sp
  602  00001614  afbffff8	sw	-8(r29),r31; push ret addr
  603  00001618  2fbd0018	subui	r29,r29,#24; alloc local storage
  604  0000161c  afa20000	sw	0(r29),r2
  605  00001620  afa30004	sw	4(r29),r3
  606  00001624  afa40008	sw	8(r29),r4
  607  00001628  83c20003	lb	r2,3(r30)
  608  0000162c  20010000	addi	r1,r0,#0
  609  00001630  304300ff	andi	r3,r2,#0x00ff
  610  00001634  6c64002f	sgtui	r4,r3,#47
  611  00001638  1080001c	beqz	r4,L7_LF2
  612  0000163c  54000000	nop; delay slot nop
  613  00001640  304300ff	andi	r3,r2,#0x00ff
  614  00001644  70640039	sleui	r4,r3,#57
  615  00001648  1480005c	bnez	r4,L6_LF2
  616  0000164c  54000000	nop; delay slot nop
  617  00001650  08000004	j	L7_LF2
  618  00001654  54000000	nop; delay slot nop
  619  00001658          	L7_LF2:
  620  00001658  304300ff	andi	r3,r2,#0x00ff
  621  0000165c  6c640060	sgtui	r4,r3,#96
  622  00001660  1080001c	beqz	r4,L8_LF2
  623  00001664  54000000	nop; delay slot nop
  624  00001668  304300ff	andi	r3,r2,#0x00ff
  625  0000166c  70640066	sleui	r4,r3,#102
  626  00001670  14800034	bnez	r4,L6_LF2
  627  00001674  54000000	nop; delay slot nop
  628  00001678  08000004	j	L8_LF2
  629  0000167c  54000000	nop; delay slot nop
  630  00001680          	L8_LF2:
  631  00001680  304300ff	andi	r3,r2,#0x00ff
  632  00001684  6c640040	sgtui	r4,r3,#64
  633  00001688  10800020	beqz	r4,L5_LF2
  634  0000168c  54000000	nop; delay slot nop
  635  00001690  304300ff	andi	r3,r2,#0x00ff
  636  00001694  70640041	sleui	r4,r3,#65
  637  00001698  1480000c	bnez	r4,L6_LF2
  638  0000169c  54000000	nop; delay slot nop
  639  000016a0  08000008	j	L5_LF2
  640  000016a4  54000000	nop; delay slot nop
  641  000016a8          	L6_LF2:
  642  000016a8  20010001	addi	r1,r0,#1
  643  000016ac          	L5_LF2:
  644  000016ac  08000004	j	L4_LF2
  645  000016b0  54000000	nop; delay slot nop
  646  000016b4          	L4_LF2:
  647  000016b4  8fa20000	lw	r2,0(r29)
  648  000016b8  8fa30004	lw	r3,4(r29)
  649  000016bc  8fa40008	lw	r4,8(r29)
  650  000016c0  8fdffff8	lw	r31,-8(r30)
  651  000016c4  001ee820	add	r29,r0,r30
  652  000016c8  8fdefffc	lw	r30,-4(r30)
  653  000016cc  4be00000	jr	r31
  654  000016d0  54000000	nop
  655  000016d4          	.endproc _isxdigit
  656  000016d4          	.align 2
  657  000016d4          	.proc _dstrcpy
  658  000016d4          	.global _dstrcpy
  659  000016d4          	_dstrcpy:
  660                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  661  000016d4  afbefffc	sw	-4(r29),r30; push fp
  662  000016d8  001df020	add	r30,r0,r29; fp = sp
  663  000016dc  afbffff8	sw	-8(r29),r31; push ret addr
  664  000016e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  665  000016e4  afa20000	sw	0(r29),r2
  666  000016e8  afa30004	sw	4(r29),r3
  667  000016ec  8fc10000	lw	r1,(r30)
  668  000016f0  afc1fff4	sw	-12(r30),r1
  669  000016f4          	L10_LF2:
  670  000016f4  8fc10000	lw	r1,(r30)
  671  000016f8  20220001	addi	r2,r1,#1
  672  000016fc  afc20000	sw	(r30),r2
  673  00001700  8fc20004	lw	r2,4(r30)
  674  00001704  20430001	addi	r3,r2,#1
  675  00001708  afc30004	sw	4(r30),r3
  676  0000170c  80420000	lb	r2,(r2)
  677  00001710  a0220000	sb	(r1),r2
  678  00001714  a3c2fff3	sb	-13(r30),r2
  679  00001718          	L12_LF2:
  680  00001718  93c1fff3	lbu	r1,-13(r30)
  681  0000171c  64220000	snei	r2,r1,#0
  682  00001720  1440000c	bnez	r2,L13_LF2
  683  00001724  54000000	nop; delay slot nop
  684  00001728  0800000c	j	L11_LF2
  685  0000172c  54000000	nop; delay slot nop
  686  00001730          	L13_LF2:
  687  00001730  0bffffc0	j	L10_LF2
  688  00001734  54000000	nop; delay slot nop
  689  00001738          	L11_LF2:
  690  00001738  8fc1fff4	lw	r1,-12(r30)
  691  0000173c  08000004	j	L9_LF2
  692  00001740  54000000	nop; delay slot nop
  693  00001744          	L9_LF2:
  694  00001744  8fa20000	lw	r2,0(r29)
  695  00001748  8fa30004	lw	r3,4(r29)
  696  0000174c  8fdffff8	lw	r31,-8(r30)
  697  00001750  001ee820	add	r29,r0,r30
  698  00001754  8fdefffc	lw	r30,-4(r30)
  699  00001758  4be00000	jr	r31
  700  0000175c  54000000	nop
  701  00001760          	.endproc _dstrcpy
  702  00001760          	.align 2
  703  00001760          	.proc _dstrncpy
  704  00001760          	.global _dstrncpy
  705  00001760          	_dstrncpy:
  706                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  707  00001760  afbefffc	sw	-4(r29),r30; push fp
  708  00001764  001df020	add	r30,r0,r29; fp = sp
  709  00001768  afbffff8	sw	-8(r29),r31; push ret addr
  710  0000176c  2fbd0018	subui	r29,r29,#24; alloc local storage
  711  00001770  afa20000	sw	0(r29),r2
  712  00001774  afa30004	sw	4(r29),r3
  713  00001778  8fc10000	lw	r1,(r30)
  714  0000177c  afc1fff4	sw	-12(r30),r1
  715  00001780          	L15_LF2:
  716  00001780  8fc10008	lw	r1,8(r30)
  717  00001784  2022ffff	addi	r2,r1,#-1
  718  00001788  afc20008	sw	8(r30),r2
  719  0000178c  70210000	slei	r1,r1,#0
  720  00001790  1020000c	beqz	r1,L18_LF2
  721  00001794  54000000	nop; delay slot nop
  722  00001798  08000048	j	L16_LF2
  723  0000179c  54000000	nop; delay slot nop
  724  000017a0          	L18_LF2:
  725  000017a0  8fc10000	lw	r1,(r30)
  726  000017a4  20220001	addi	r2,r1,#1
  727  000017a8  afc20000	sw	(r30),r2
  728  000017ac  8fc20004	lw	r2,4(r30)
  729  000017b0  20430001	addi	r3,r2,#1
  730  000017b4  afc30004	sw	4(r30),r3
  731  000017b8  80420000	lb	r2,(r2)
  732  000017bc  a0220000	sb	(r1),r2
  733  000017c0  a3c2fff3	sb	-13(r30),r2
  734  000017c4          	L17_LF2:
  735  000017c4  93c1fff3	lbu	r1,-13(r30)
  736  000017c8  64220000	snei	r2,r1,#0
  737  000017cc  1440000c	bnez	r2,L19_LF2
  738  000017d0  54000000	nop; delay slot nop
  739  000017d4  0800000c	j	L16_LF2
  740  000017d8  54000000	nop; delay slot nop
  741  000017dc          	L19_LF2:
  742  000017dc  0bffffa0	j	L15_LF2
  743  000017e0  54000000	nop; delay slot nop
  744  000017e4          	L16_LF2:
  745  000017e4  8fc1fff4	lw	r1,-12(r30)
  746  000017e8  08000004	j	L14_LF2
  747  000017ec  54000000	nop; delay slot nop
  748  000017f0          	L14_LF2:
  749  000017f0  8fa20000	lw	r2,0(r29)
  750  000017f4  8fa30004	lw	r3,4(r29)
  751  000017f8  8fdffff8	lw	r31,-8(r30)
  752  000017fc  001ee820	add	r29,r0,r30
  753  00001800  8fdefffc	lw	r30,-4(r30)
  754  00001804  4be00000	jr	r31
  755  00001808  54000000	nop
  756  0000180c          	.endproc _dstrncpy
  757  0000180c          	.align 2
  758  0000180c          	.proc _dstrcat
  759  0000180c          	.global _dstrcat
  760  0000180c          	_dstrcat:
  761                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  762  0000180c  afbefffc	sw	-4(r29),r30; push fp
  763  00001810  001df020	add	r30,r0,r29; fp = sp
  764  00001814  afbffff8	sw	-8(r29),r31; push ret addr
  765  00001818  2fbd0018	subui	r29,r29,#24; alloc local storage
  766  0000181c  afa20000	sw	0(r29),r2
  767  00001820  8fc10000	lw	r1,(r30)
  768  00001824  afc1fff4	sw	-12(r30),r1
  769  00001828          	L21_LF2:
  770  00001828  8fc10000	lw	r1,(r30)
  771  0000182c  90220000	lbu	r2,(r1)
  772  00001830  64410000	snei	r1,r2,#0
  773  00001834  1420000c	bnez	r1,L23_LF2
  774  00001838  54000000	nop; delay slot nop
  775  0000183c  0800001c	j	L22_LF2
  776  00001840  54000000	nop; delay slot nop
  777  00001844          	L23_LF2:
  778  00001844  8fc20000	lw	r2,(r30)
  779  00001848  20410001	addi	r1,r2,#1
  780  0000184c  00011020	add	r2,r0,r1
  781  00001850  afc20000	sw	(r30),r2
  782  00001854  0bffffd0	j	L21_LF2
  783  00001858  54000000	nop; delay slot nop
  784  0000185c          	L22_LF2:
  785  0000185c  23bdfff8	addi	r29,r29,#-8
  786  00001860  001d0820	add	r1,r0,r29
  787  00001864  8fc20000	lw	r2,(r30)
  788  00001868  ac220000	sw	(r1),r2
  789  0000186c  8fc20004	lw	r2,4(r30)
  790  00001870  ac220004	sw	4(r1),r2
  791  00001874  0ffffe5c	jal	_dstrcpy
  792  00001878  54000000	nop; delay slot nop
  793  0000187c  23bd0008	addi	r29,r29,#8
  794  00001880  8fc1fff4	lw	r1,-12(r30)
  795  00001884  08000004	j	L20_LF2
  796  00001888  54000000	nop; delay slot nop
  797  0000188c          	L20_LF2:
  798  0000188c  8fa20000	lw	r2,0(r29)
  799  00001890  8fdffff8	lw	r31,-8(r30)
  800  00001894  001ee820	add	r29,r0,r30
  801  00001898  8fdefffc	lw	r30,-4(r30)
  802  0000189c  4be00000	jr	r31
  803  000018a0  54000000	nop
  804  000018a4          	.endproc _dstrcat
  805  000018a4          	.align 2
  806  000018a4          	.proc _dstrncmp
  807  000018a4          	.global _dstrncmp
  808  000018a4          	_dstrncmp:
  809                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  810  000018a4  afbefffc	sw	-4(r29),r30; push fp
  811  000018a8  001df020	add	r30,r0,r29; fp = sp
  812  000018ac  afbffff8	sw	-8(r29),r31; push ret addr
  813  000018b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  814  000018b4  afa20000	sw	0(r29),r2
  815  000018b8  afa30004	sw	4(r29),r3
  816  000018bc  54000000	nop
  817  000018c0  20010000	addi	r1,r0,#0
  818  000018c4  afc1fff4	sw	-12(r30),r1
  819  000018c8          	L25_LF2:
  820  000018c8  8fc1fff4	lw	r1,-12(r30)
  821  000018cc  8fc20008	lw	r2,8(r30)
  822  000018d0  0022082a	slt	r1,r1,r2
  823  000018d4  1420000c	bnez	r1,L28_LF2
  824  000018d8  54000000	nop; delay slot nop
  825  000018dc  08000088	j	L26_LF2
  826  000018e0  54000000	nop; delay slot nop
  827  000018e4          	L28_LF2:
  828  000018e4  8fc10004	lw	r1,4(r30)
  829  000018e8  90220000	lbu	r2,(r1)
  830  000018ec  64410000	snei	r1,r2,#0
  831  000018f0  14200018	bnez	r1,L29_LF2
  832  000018f4  54000000	nop; delay slot nop
  833  000018f8  20010000	addi	r1,r0,#0
  834  000018fc  080000d8	j	L24_LF2
  835  00001900  54000000	nop; delay slot nop
  836  00001904  08000028	j	L30_LF2
  837  00001908  54000000	nop; delay slot nop
  838  0000190c          	L29_LF2:
  839  0000190c  8fc10000	lw	r1,(r30)
  840  00001910  8fc20004	lw	r2,4(r30)
  841  00001914  90210000	lbu	r1,(r1)
  842  00001918  90420000	lbu	r2,(r2)
  843  0000191c  00220829	sne	r1,r1,r2
  844  00001920  1020000c	beqz	r1,L30_LF2
  845  00001924  54000000	nop; delay slot nop
  846  00001928  0800003c	j	L26_LF2
  847  0000192c  54000000	nop; delay slot nop
  848  00001930          	L31_LF2:
  849  00001930          	L30_LF2:
  850  00001930  8fc20000	lw	r2,(r30)
  851  00001934  20410001	addi	r1,r2,#1
  852  00001938  00011020	add	r2,r0,r1
  853  0000193c  afc20000	sw	(r30),r2
  854  00001940  8fc20004	lw	r2,4(r30)
  855  00001944  20410001	addi	r1,r2,#1
  856  00001948  00011020	add	r2,r0,r1
  857  0000194c  afc20004	sw	4(r30),r2
  858  00001950          	L27_LF2:
  859  00001950  8fc2fff4	lw	r2,-12(r30)
  860  00001954  20410001	addi	r1,r2,#1
  861  00001958  00011020	add	r2,r0,r1
  862  0000195c  afc2fff4	sw	-12(r30),r2
  863  00001960  0bffff64	j	L25_LF2
  864  00001964  54000000	nop; delay slot nop
  865  00001968          	L26_LF2:
  866  00001968  8fc1fff4	lw	r1,-12(r30)
  867  0000196c  8fc20008	lw	r2,8(r30)
  868  00001970  00220828	seq	r1,r1,r2
  869  00001974  10200018	beqz	r1,L32_LF2
  870  00001978  54000000	nop; delay slot nop
  871  0000197c  20010000	addi	r1,r0,#0
  872  00001980  08000054	j	L24_LF2
  873  00001984  54000000	nop; delay slot nop
  874  00001988  0800004c	j	L33_LF2
  875  0000198c  54000000	nop; delay slot nop
  876  00001990          	L32_LF2:
  877  00001990  8fc20000	lw	r2,(r30)
  878  00001994  90410000	lbu	r1,(r2)
  879  00001998  8fc20004	lw	r2,4(r30)
  880  0000199c  90430000	lbu	r3,(r2)
  881  000019a0  00230822	sub	r1,r1,r3
  882  000019a4  74220000	sgei	r2,r1,#0
  883  000019a8  10400020	beqz	r2,L34_LF2
  884  000019ac  54000000	nop; delay slot nop
  885  000019b0  8fc10000	lw	r1,(r30)
  886  000019b4  8fc20004	lw	r2,4(r30)
  887  000019b8  90210000	lbu	r1,(r1)
  888  000019bc  90420000	lbu	r2,(r2)
  889  000019c0  00220829	sne	r1,r1,r2
  890  000019c4  08000008	j	L35_LF2
  891  000019c8  54000000	nop; delay slot nop
  892  000019cc          	L34_LF2:
  893  000019cc  2001ffff	addi	r1,r0,#-1
  894  000019d0          	L35_LF2:
  895  000019d0  08000004	j	L24_LF2
  896  000019d4  54000000	nop; delay slot nop
  897  000019d8          	L33_LF2:
  898  000019d8          	L24_LF2:
  899  000019d8  8fa20000	lw	r2,0(r29)
  900  000019dc  8fa30004	lw	r3,4(r29)
  901  000019e0  8fdffff8	lw	r31,-8(r30)
  902  000019e4  001ee820	add	r29,r0,r30
  903  000019e8  8fdefffc	lw	r30,-4(r30)
  904  000019ec  4be00000	jr	r31
  905  000019f0  54000000	nop
  906  000019f4          	.endproc _dstrncmp
  907  000019f4          	.align 2
  908  000019f4          	.proc _dstrlen
  909  000019f4          	.global _dstrlen
  910  000019f4          	_dstrlen:
  911                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  912  000019f4  afbefffc	sw	-4(r29),r30; push fp
  913  000019f8  001df020	add	r30,r0,r29; fp = sp
  914  000019fc  afbffff8	sw	-8(r29),r31; push ret addr
  915  00001a00  2fbd0018	subui	r29,r29,#24; alloc local storage
  916  00001a04  afa20000	sw	0(r29),r2
  917  00001a08  20010000	addi	r1,r0,#0
  918  00001a0c  afc1fff4	sw	-12(r30),r1
  919  00001a10          	L37_LF2:
  920  00001a10  8fc10000	lw	r1,(r30)
  921  00001a14  20220001	addi	r2,r1,#1
  922  00001a18  afc20000	sw	(r30),r2
  923  00001a1c  90210000	lbu	r1,(r1)
  924  00001a20  64220000	snei	r2,r1,#0
  925  00001a24  1440000c	bnez	r2,L39_LF2
  926  00001a28  54000000	nop; delay slot nop
  927  00001a2c  0800001c	j	L38_LF2
  928  00001a30  54000000	nop; delay slot nop
  929  00001a34          	L39_LF2:
  930  00001a34  8fc2fff4	lw	r2,-12(r30)
  931  00001a38  20410001	addi	r1,r2,#1
  932  00001a3c  00011020	add	r2,r0,r1
  933  00001a40  afc2fff4	sw	-12(r30),r2
  934  00001a44  0bffffc8	j	L37_LF2
  935  00001a48  54000000	nop; delay slot nop
  936  00001a4c          	L38_LF2:
  937  00001a4c  8fc1fff4	lw	r1,-12(r30)
  938  00001a50  08000004	j	L36_LF2
  939  00001a54  54000000	nop; delay slot nop
  940  00001a58          	L36_LF2:
  941  00001a58  8fa20000	lw	r2,0(r29)
  942  00001a5c  8fdffff8	lw	r31,-8(r30)
  943  00001a60  001ee820	add	r29,r0,r30
  944  00001a64  8fdefffc	lw	r30,-4(r30)
  945  00001a68  4be00000	jr	r31
  946  00001a6c  54000000	nop
  947  00001a70          	.endproc _dstrlen
  948  00001a70          	.align 2
  949  00001a70          	.proc _dstrstr
  950  00001a70          	.global _dstrstr
  951  00001a70          	_dstrstr:
  952                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  953  00001a70  afbefffc	sw	-4(r29),r30; push fp
  954  00001a74  001df020	add	r30,r0,r29; fp = sp
  955  00001a78  afbffff8	sw	-8(r29),r31; push ret addr
  956  00001a7c  2fbd0018	subui	r29,r29,#24; alloc local storage
  957  00001a80  afa20000	sw	0(r29),r2
  958  00001a84  23bdfff8	addi	r29,r29,#-8
  959  00001a88  001d0820	add	r1,r0,r29
  960  00001a8c  8fc20004	lw	r2,4(r30)
  961  00001a90  ac220000	sw	(r1),r2
  962  00001a94  0fffff5c	jal	_dstrlen
  963  00001a98  54000000	nop; delay slot nop
  964  00001a9c  23bd0008	addi	r29,r29,#8
  965  00001aa0  afc1fff4	sw	-12(r30),r1
  966  00001aa4          	L41_LF2:
  967  00001aa4  8fc10000	lw	r1,(r30)
  968  00001aa8  90220000	lbu	r2,(r1)
  969  00001aac  64410000	snei	r1,r2,#0
  970  00001ab0  1420000c	bnez	r1,L43_LF2
  971  00001ab4  54000000	nop; delay slot nop
  972  00001ab8  08000060	j	L42_LF2
  973  00001abc  54000000	nop; delay slot nop
  974  00001ac0          	L43_LF2:
  975  00001ac0  23bdfff0	addi	r29,r29,#-16
  976  00001ac4  001d0820	add	r1,r0,r29
  977  00001ac8  8fc20000	lw	r2,(r30)
  978  00001acc  ac220000	sw	(r1),r2
  979  00001ad0  8fc20004	lw	r2,4(r30)
  980  00001ad4  ac220004	sw	4(r1),r2
  981  00001ad8  8fc2fff4	lw	r2,-12(r30)
  982  00001adc  ac220008	sw	8(r1),r2
  983  00001ae0  0ffffdc0	jal	_dstrncmp
  984  00001ae4  54000000	nop; delay slot nop
  985  00001ae8  23bd0010	addi	r29,r29,#16
  986  00001aec  64220000	snei	r2,r1,#0
  987  00001af0  14400010	bnez	r2,L44_LF2
  988  00001af4  54000000	nop; delay slot nop
  989  00001af8  8fc10000	lw	r1,(r30)
  990  00001afc  08000028	j	L40_LF2
  991  00001b00  54000000	nop; delay slot nop
  992  00001b04          	L44_LF2:
  993  00001b04  8fc20000	lw	r2,(r30)
  994  00001b08  20410001	addi	r1,r2,#1
  995  00001b0c  00011020	add	r2,r0,r1
  996  00001b10  afc20000	sw	(r30),r2
  997  00001b14  0bffff8c	j	L41_LF2
  998  00001b18  54000000	nop; delay slot nop
  999  00001b1c          	L42_LF2:
 1000  00001b1c  20010000	addi	r1,r0,#0
 1001  00001b20  08000004	j	L40_LF2
 1002  00001b24  54000000	nop; delay slot nop
 1003  00001b28          	L40_LF2:
 1004  00001b28  8fa20000	lw	r2,0(r29)
 1005  00001b2c  8fdffff8	lw	r31,-8(r30)
 1006  00001b30  001ee820	add	r29,r0,r30
 1007  00001b34  8fdefffc	lw	r30,-4(r30)
 1008  00001b38  4be00000	jr	r31
 1009  00001b3c  54000000	nop
 1010  00001b40          	.endproc _dstrstr
 1011  00001b40          	.align 2
 1012  00001b40          	.proc _dmindex
 1013  00001b40          	.global _dmindex
 1014  00001b40          	_dmindex:
 1015                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1016  00001b40  afbefffc	sw	-4(r29),r30; push fp
 1017  00001b44  001df020	add	r30,r0,r29; fp = sp
 1018  00001b48  afbffff8	sw	-8(r29),r31; push ret addr
 1019  00001b4c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1020  00001b50  afa20000	sw	0(r29),r2
 1021  00001b54  54000000	nop
 1022  00001b58          	L46_LF2:
 1023  00001b58  8fc10000	lw	r1,(r30)
 1024  00001b5c  90220000	lbu	r2,(r1)
 1025  00001b60  64410000	snei	r1,r2,#0
 1026  00001b64  1420000c	bnez	r1,L48_LF2
 1027  00001b68  54000000	nop; delay slot nop
 1028  00001b6c  08000070	j	L47_LF2
 1029  00001b70  54000000	nop; delay slot nop
 1030  00001b74          	L48_LF2:
 1031  00001b74  8fc10004	lw	r1,4(r30)
 1032  00001b78  afc1fff4	sw	-12(r30),r1
 1033  00001b7c          	L49_LF2:
 1034  00001b7c  8fc1fff4	lw	r1,-12(r30)
 1035  00001b80  90220000	lbu	r2,(r1)
 1036  00001b84  64410000	snei	r1,r2,#0
 1037  00001b88  1420000c	bnez	r1,L52_LF2
 1038  00001b8c  54000000	nop; delay slot nop
 1039  00001b90  08000044	j	L50_LF2
 1040  00001b94  54000000	nop; delay slot nop
 1041  00001b98          	L52_LF2:
 1042  00001b98  8fc10000	lw	r1,(r30)
 1043  00001b9c  8fc2fff4	lw	r2,-12(r30)
 1044  00001ba0  90210000	lbu	r1,(r1)
 1045  00001ba4  90420000	lbu	r2,(r2)
 1046  00001ba8  00220828	seq	r1,r1,r2
 1047  00001bac  10200010	beqz	r1,L51_LF2
 1048  00001bb0  54000000	nop; delay slot nop
 1049  00001bb4  8fc10000	lw	r1,(r30)
 1050  00001bb8  08000030	j	L45_LF2
 1051  00001bbc  54000000	nop; delay slot nop
 1052  00001bc0          	L53_LF2:
 1053  00001bc0          	L51_LF2:
 1054  00001bc0  8fc2fff4	lw	r2,-12(r30)
 1055  00001bc4  20410001	addi	r1,r2,#1
 1056  00001bc8  00011020	add	r2,r0,r1
 1057  00001bcc  afc2fff4	sw	-12(r30),r2
 1058  00001bd0  0bffffa8	j	L49_LF2
 1059  00001bd4  54000000	nop; delay slot nop
 1060  00001bd8          	L50_LF2:
 1061  00001bd8  0bffff7c	j	L46_LF2
 1062  00001bdc  54000000	nop; delay slot nop
 1063  00001be0          	L47_LF2:
 1064  00001be0  20010000	addi	r1,r0,#0
 1065  00001be4  08000004	j	L45_LF2
 1066  00001be8  54000000	nop; delay slot nop
 1067  00001bec          	L45_LF2:
 1068  00001bec  8fa20000	lw	r2,0(r29)
 1069  00001bf0  8fdffff8	lw	r31,-8(r30)
 1070  00001bf4  001ee820	add	r29,r0,r30
 1071  00001bf8  8fdefffc	lw	r30,-4(r30)
 1072  00001bfc  4be00000	jr	r31
 1073  00001c00  54000000	nop
 1074  00001c04          	.endproc _dmindex
 1075  00001c04          	.align 2
 1076  00001c04          	.proc _dindex
 1077  00001c04          	.global _dindex
 1078  00001c04          	_dindex:
 1079                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1080  00001c04  afbefffc	sw	-4(r29),r30; push fp
 1081  00001c08  001df020	add	r30,r0,r29; fp = sp
 1082  00001c0c  afbffff8	sw	-8(r29),r31; push ret addr
 1083  00001c10  2fbd0010	subui	r29,r29,#16; alloc local storage
 1084  00001c14  afa20000	sw	0(r29),r2
 1085  00001c18  54000000	nop
 1086  00001c1c          	L55_LF2:
 1087  00001c1c  8fc10000	lw	r1,(r30)
 1088  00001c20  90220000	lbu	r2,(r1)
 1089  00001c24  64410000	snei	r1,r2,#0
 1090  00001c28  1420000c	bnez	r1,L57_LF2
 1091  00001c2c  54000000	nop; delay slot nop
 1092  00001c30  08000040	j	L56_LF2
 1093  00001c34  54000000	nop; delay slot nop
 1094  00001c38          	L57_LF2:
 1095  00001c38  8fc10000	lw	r1,(r30)
 1096  00001c3c  90220000	lbu	r2,(r1)
 1097  00001c40  8fc10004	lw	r1,4(r30)
 1098  00001c44  00411028	seq	r2,r2,r1
 1099  00001c48  10400010	beqz	r2,L58_LF2
 1100  00001c4c  54000000	nop; delay slot nop
 1101  00001c50  8fc10000	lw	r1,(r30)
 1102  00001c54  08000028	j	L54_LF2
 1103  00001c58  54000000	nop; delay slot nop
 1104  00001c5c          	L58_LF2:
 1105  00001c5c  8fc20000	lw	r2,(r30)
 1106  00001c60  20410001	addi	r1,r2,#1
 1107  00001c64  00011020	add	r2,r0,r1
 1108  00001c68  afc20000	sw	(r30),r2
 1109  00001c6c  0bffffac	j	L55_LF2
 1110  00001c70  54000000	nop; delay slot nop
 1111  00001c74          	L56_LF2:
 1112  00001c74  20010000	addi	r1,r0,#0
 1113  00001c78  08000004	j	L54_LF2
 1114  00001c7c  54000000	nop; delay slot nop
 1115  00001c80          	L54_LF2:
 1116  00001c80  8fa20000	lw	r2,0(r29)
 1117  00001c84  8fdffff8	lw	r31,-8(r30)
 1118  00001c88  001ee820	add	r29,r0,r30
 1119  00001c8c  8fdefffc	lw	r30,-4(r30)
 1120  00001c90  4be00000	jr	r31
 1121  00001c94  54000000	nop
 1122  00001c98          	.endproc _dindex
 1123  00001c98          	.align 2
 1124  00001c98          	.proc _ditoa
 1125  00001c98          	.global _ditoa
 1126  00001c98          	_ditoa:
 1127                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1128  00001c98  afbefffc	sw	-4(r29),r30; push fp
 1129  00001c9c  001df020	add	r30,r0,r29; fp = sp
 1130  00001ca0  afbffff8	sw	-8(r29),r31; push ret addr
 1131  00001ca4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1132  00001ca8  afa20000	sw	0(r29),r2
 1133  00001cac  afa30004	sw	4(r29),r3
 1134  00001cb0  8fc10000	lw	r1,(r30)
 1135  00001cb4  68220000	slti	r2,r1,#0
 1136  00001cb8  1040002c	beqz	r2,L60_LF2
 1137  00001cbc  54000000	nop; delay slot nop
 1138  00001cc0  8fc10004	lw	r1,4(r30)
 1139  00001cc4  20220001	addi	r2,r1,#1
 1140  00001cc8  afc20004	sw	4(r30),r2
 1141  00001ccc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1142  00001cd0  a0220000	sb	(r1),r2
 1143  00001cd4  8fc10000	lw	r1,(r30)
 1144  00001cd8  00011022	sub	r2,r0,r1
 1145  00001cdc  afc20000	sw	(r30),r2
 1146  00001ce0  08000118	j	L61_LF2
 1147  00001ce4  54000000	nop; delay slot nop
 1148  00001ce8          	L60_LF2:
 1149  00001ce8  8fc10000	lw	r1,(r30)
 1150  00001cec  64220000	snei	r2,r1,#0
 1151  00001cf0  14400020	bnez	r2,L62_LF2
 1152  00001cf4  54000000	nop; delay slot nop
 1153  00001cf8  8fc10004	lw	r1,4(r30)
 1154  00001cfc  20220001	addi	r2,r1,#1
 1155  00001d00  afc20004	sw	4(r30),r2
 1156  00001d04  20020030	addi	r2,r0,(#0x30)&0xff
 1157  00001d08  a0220000	sb	(r1),r2
 1158  00001d0c  080000ec	j	L61_LF2
 1159  00001d10  54000000	nop; delay slot nop
 1160  00001d14          	L62_LF2:
 1161  00001d14  20010001	addi	r1,r0,#1
 1162  00001d18  afc1fff4	sw	-12(r30),r1
 1163  00001d1c          	L64_LF2:
 1164  00001d1c  8fc1fff4	lw	r1,-12(r30)
 1165  00001d20  8fc20000	lw	r2,(r30)
 1166  00001d24  0022082c	sle	r1,r1,r2
 1167  00001d28  1420000c	bnez	r1,L66_LF2
 1168  00001d2c  54000000	nop; delay slot nop
 1169  00001d30  08000024	j	L65_LF2
 1170  00001d34  54000000	nop; delay slot nop
 1171  00001d38          	L67_LF2:
 1172  00001d38          	L66_LF2:
 1173  00001d38  8fc1fff4	lw	r1,-12(r30)
 1174  00001d3c  00011820	add	r3,r0,r1
 1175  00001d40  50620002	slli	r2,r3,#0x2
 1176  00001d44  00411020	add	r2,r2,r1
 1177  00001d48  50410001	slli	r1,r2,#0x1
 1178  00001d4c  afc1fff4	sw	-12(r30),r1
 1179  00001d50  0bffffc8	j	L64_LF2
 1180  00001d54  54000000	nop; delay slot nop
 1181  00001d58          	L65_LF2:
 1182  00001d58  54000000	nop
 1183  00001d5c          	L68_LF2:
 1184  00001d5c  8fc1fff4	lw	r1,-12(r30)
 1185  00001d60  2002000a	addi	r2,r0,#10
 1186  00001d64  00200035	movi2fp	f0,r1
 1187  00001d68  00400835	movi2fp	f1,r2
 1188  00001d6c  0401000f	div	f0,f0,f1
 1189  00001d70  00000834	movfp2i	r1,f0
 1190  00001d74  afc1fff4	sw	-12(r30),r1
 1191  00001d78  8fc10004	lw	r1,4(r30)
 1192  00001d7c  20220001	addi	r2,r1,#1
 1193  00001d80  afc20004	sw	4(r30),r2
 1194  00001d84  8fc20000	lw	r2,(r30)
 1195  00001d88  8fc3fff4	lw	r3,-12(r30)
 1196  00001d8c  00400035	movi2fp	f0,r2
 1197  00001d90  00600835	movi2fp	f1,r3
 1198  00001d94  0401000f	div	f0,f0,f1
 1199  00001d98  00001034	movfp2i	r2,f0
 1200  00001d9c  00021820	add	r3,r0,r2
 1201  00001da0  20620030	addi	r2,r3,#48
 1202  00001da4  a0220000	sb	(r1),r2
 1203  00001da8  8fc10000	lw	r1,(r30)
 1204  00001dac  8fc3fff4	lw	r3,-12(r30)
 1205  00001db0  00200035	movi2fp	f0,r1
 1206  00001db4  00600835	movi2fp	f1,r3
 1207  00001db8  0401000f	div	f0,f0,f1
 1208  00001dbc  00001034	movfp2i	r2,f0
 1209  00001dc0  8fc3fff4	lw	r3,-12(r30)
 1210  00001dc4  00400035	movi2fp	f0,r2
 1211  00001dc8  00600835	movi2fp	f1,r3
 1212  00001dcc  0401000e	mult	f0,f0,f1
 1213  00001dd0  00001034	movfp2i	r2,f0
 1214  00001dd4  00220822	sub	r1,r1,r2
 1215  00001dd8  afc10000	sw	(r30),r1
 1216  00001ddc          	L70_LF2:
 1217  00001ddc  8fc1fff4	lw	r1,-12(r30)
 1218  00001de0  6c220001	sgti	r2,r1,#1
 1219  00001de4  1440000c	bnez	r2,L71_LF2
 1220  00001de8  54000000	nop; delay slot nop
 1221  00001dec  0800000c	j	L61_LF2
 1222  00001df0  54000000	nop; delay slot nop
 1223  00001df4          	L71_LF2:
 1224  00001df4  0bffff64	j	L68_LF2
 1225  00001df8  54000000	nop; delay slot nop
 1226  00001dfc          	L69_LF2:
 1227  00001dfc          	L63_LF2:
 1228  00001dfc          	L61_LF2:
 1229  00001dfc  8fc10004	lw	r1,4(r30)
 1230  00001e00  20020000	addi	r2,r0,(#0x0)&0xff
 1231  00001e04  a0220000	sb	(r1),r2
 1232  00001e08          	L59_LF2:
 1233  00001e08  8fa20000	lw	r2,0(r29)
 1234  00001e0c  8fa30004	lw	r3,4(r29)
 1235  00001e10  8fdffff8	lw	r31,-8(r30)
 1236  00001e14  001ee820	add	r29,r0,r30
 1237  00001e18  8fdefffc	lw	r30,-4(r30)
 1238  00001e1c  4be00000	jr	r31
 1239  00001e20  54000000	nop
 1240  00001e24          	.endproc _ditoa
 1241  00001e24          	.align 2
 1242  00001e24          	.proc _dstrtol
 1243  00001e24          	.global _dstrtol
 1244  00001e24          	_dstrtol:
 1245                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1246  00001e24  afbefffc	sw	-4(r29),r30; push fp
 1247  00001e28  001df020	add	r30,r0,r29; fp = sp
 1248  00001e2c  afbffff8	sw	-8(r29),r31; push ret addr
 1249  00001e30  2fbd0020	subui	r29,r29,#32; alloc local storage
 1250  00001e34  afa20000	sw	0(r29),r2
 1251  00001e38  20010000	addi	r1,r0,#0
 1252  00001e3c  afc1fff4	sw	-12(r30),r1
 1253  00001e40          	L73_LF2:
 1254  00001e40  8fc10000	lw	r1,(r30)
 1255  00001e44  90220000	lbu	r2,(r1)
 1256  00001e48  60410020	seqi	r1,r2,#32
 1257  00001e4c  14200034	bnez	r1,L75_LF2
 1258  00001e50  54000000	nop; delay slot nop
 1259  00001e54  8fc10000	lw	r1,(r30)
 1260  00001e58  90220000	lbu	r2,(r1)
 1261  00001e5c  60410009	seqi	r1,r2,#9
 1262  00001e60  14200020	bnez	r1,L75_LF2
 1263  00001e64  54000000	nop; delay slot nop
 1264  00001e68  8fc10000	lw	r1,(r30)
 1265  00001e6c  90220000	lbu	r2,(r1)
 1266  00001e70  6041000a	seqi	r1,r2,#10
 1267  00001e74  1420000c	bnez	r1,L75_LF2
 1268  00001e78  54000000	nop; delay slot nop
 1269  00001e7c  0800001c	j	L74_LF2
 1270  00001e80  54000000	nop; delay slot nop
 1271  00001e84          	L75_LF2:
 1272  00001e84  8fc20000	lw	r2,(r30)
 1273  00001e88  20410001	addi	r1,r2,#1
 1274  00001e8c  00011020	add	r2,r0,r1
 1275  00001e90  afc20000	sw	(r30),r2
 1276  00001e94  0bffffa8	j	L73_LF2
 1277  00001e98  54000000	nop; delay slot nop
 1278  00001e9c          	L74_LF2:
 1279  00001e9c  8fc10004	lw	r1,4(r30)
 1280  00001ea0  64220000	snei	r2,r1,#0
 1281  00001ea4  10400010	beqz	r2,L76_LF2
 1282  00001ea8  54000000	nop; delay slot nop
 1283  00001eac  8fc10004	lw	r1,4(r30)
 1284  00001eb0  8fc20000	lw	r2,(r30)
 1285  00001eb4  ac220000	sw	(r1),r2
 1286  00001eb8          	L76_LF2:
 1287  00001eb8  8fc10000	lw	r1,(r30)
 1288  00001ebc  90220000	lbu	r2,(r1)
 1289  00001ec0  64410000	snei	r1,r2,#0
 1290  00001ec4  14200010	bnez	r1,L77_LF2
 1291  00001ec8  54000000	nop; delay slot nop
 1292  00001ecc  8fc1fff4	lw	r1,-12(r30)
 1293  00001ed0  08000294	j	L72_LF2
 1294  00001ed4  54000000	nop; delay slot nop
 1295  00001ed8          	L77_LF2:
 1296  00001ed8  8fc10000	lw	r1,(r30)
 1297  00001edc  90220000	lbu	r2,(r1)
 1298  00001ee0  6041002d	seqi	r1,r2,#45
 1299  00001ee4  10200024	beqz	r1,L78_LF2
 1300  00001ee8  54000000	nop; delay slot nop
 1301  00001eec  2001ffff	addi	r1,r0,#-1
 1302  00001ef0  afc1ffec	sw	-20(r30),r1
 1303  00001ef4  8fc20000	lw	r2,(r30)
 1304  00001ef8  20410001	addi	r1,r2,#1
 1305  00001efc  00011020	add	r2,r0,r1
 1306  00001f00  afc20000	sw	(r30),r2
 1307  00001f04  0800000c	j	L79_LF2
 1308  00001f08  54000000	nop; delay slot nop
 1309  00001f0c          	L78_LF2:
 1310  00001f0c  20010001	addi	r1,r0,#1
 1311  00001f10  afc1ffec	sw	-20(r30),r1
 1312  00001f14          	L79_LF2:
 1313  00001f14  8fc10008	lw	r1,8(r30)
 1314  00001f18  64220000	snei	r2,r1,#0
 1315  00001f1c  14400090	bnez	r2,L80_LF2
 1316  00001f20  54000000	nop; delay slot nop
 1317  00001f24  8fc10000	lw	r1,(r30)
 1318  00001f28  90220000	lbu	r2,(r1)
 1319  00001f2c  60410030	seqi	r1,r2,#48
 1320  00001f30  10200074	beqz	r1,L81_LF2
 1321  00001f34  54000000	nop; delay slot nop
 1322  00001f38  8fc20000	lw	r2,(r30)
 1323  00001f3c  20410001	addi	r1,r2,#1
 1324  00001f40  00011020	add	r2,r0,r1
 1325  00001f44  afc20000	sw	(r30),r2
 1326  00001f48  8fc10000	lw	r1,(r30)
 1327  00001f4c  90220000	lbu	r2,(r1)
 1328  00001f50  60410078	seqi	r1,r2,#120
 1329  00001f54  14200020	bnez	r1,L83_LF2
 1330  00001f58  54000000	nop; delay slot nop
 1331  00001f5c  8fc10000	lw	r1,(r30)
 1332  00001f60  90220000	lbu	r2,(r1)
 1333  00001f64  60410058	seqi	r1,r2,#88
 1334  00001f68  1420000c	bnez	r1,L83_LF2
 1335  00001f6c  54000000	nop; delay slot nop
 1336  00001f70  08000024	j	L82_LF2
 1337  00001f74  54000000	nop; delay slot nop
 1338  00001f78          	L83_LF2:
 1339  00001f78  20010010	addi	r1,r0,#16
 1340  00001f7c  afc10008	sw	8(r30),r1
 1341  00001f80  8fc20000	lw	r2,(r30)
 1342  00001f84  20410001	addi	r1,r2,#1
 1343  00001f88  00011020	add	r2,r0,r1
 1344  00001f8c  afc20000	sw	(r30),r2
 1345  00001f90  0800000c	j	L84_LF2
 1346  00001f94  54000000	nop; delay slot nop
 1347  00001f98          	L82_LF2:
 1348  00001f98  20010008	addi	r1,r0,#8
 1349  00001f9c  afc10008	sw	8(r30),r1
 1350  00001fa0          	L84_LF2:
 1351  00001fa0  0800000c	j	L80_LF2
 1352  00001fa4  54000000	nop; delay slot nop
 1353  00001fa8          	L81_LF2:
 1354  00001fa8  2001000a	addi	r1,r0,#10
 1355  00001fac  afc10008	sw	8(r30),r1
 1356  00001fb0          	L85_LF2:
 1357  00001fb0          	L80_LF2:
 1358  00001fb0  8fc10008	lw	r1,8(r30)
 1359  00001fb4  70220000	slei	r2,r1,#0
 1360  00001fb8  1440001c	bnez	r2,L87_LF2
 1361  00001fbc  54000000	nop; delay slot nop
 1362  00001fc0  8fc10008	lw	r1,8(r30)
 1363  00001fc4  6c220010	sgti	r2,r1,#16
 1364  00001fc8  1440000c	bnez	r2,L87_LF2
 1365  00001fcc  54000000	nop; delay slot nop
 1366  00001fd0  08000010	j	L86_LF2
 1367  00001fd4  54000000	nop; delay slot nop
 1368  00001fd8          	L87_LF2:
 1369  00001fd8  8fc1fff4	lw	r1,-12(r30)
 1370  00001fdc  08000188	j	L72_LF2
 1371  00001fe0  54000000	nop; delay slot nop
 1372  00001fe4          	L86_LF2:
 1373  00001fe4  54000000	nop
 1374  00001fe8          	L88_LF2:
 1375  00001fe8  8fc10000	lw	r1,(r30)
 1376  00001fec  90220000	lbu	r2,(r1)
 1377  00001ff0  6c41002f	sgtui	r1,r2,#47
 1378  00001ff4  10200030	beqz	r1,L91_LF2
 1379  00001ff8  54000000	nop; delay slot nop
 1380  00001ffc  8fc10000	lw	r1,(r30)
 1381  00002000  90220000	lbu	r2,(r1)
 1382  00002004  70410039	sleui	r1,r2,#57
 1383  00002008  1020001c	beqz	r1,L91_LF2
 1384  0000200c  54000000	nop; delay slot nop
 1385  00002010  8fc10000	lw	r1,(r30)
 1386  00002014  90220000	lbu	r2,(r1)
 1387  00002018  2041ffd0	addi	r1,r2,#-48
 1388  0000201c  afc1fff0	sw	-16(r30),r1
 1389  00002020  0800008c	j	L92_LF2
 1390  00002024  54000000	nop; delay slot nop
 1391  00002028          	L91_LF2:
 1392  00002028  8fc10000	lw	r1,(r30)
 1393  0000202c  90220000	lbu	r2,(r1)
 1394  00002030  6c410060	sgtui	r1,r2,#96
 1395  00002034  10200030	beqz	r1,L93_LF2
 1396  00002038  54000000	nop; delay slot nop
 1397  0000203c  8fc10000	lw	r1,(r30)
 1398  00002040  90220000	lbu	r2,(r1)
 1399  00002044  7041007a	sleui	r1,r2,#122
 1400  00002048  1020001c	beqz	r1,L93_LF2
 1401  0000204c  54000000	nop; delay slot nop
 1402  00002050  8fc10000	lw	r1,(r30)
 1403  00002054  90220000	lbu	r2,(r1)
 1404  00002058  2041ffa9	addi	r1,r2,#-87
 1405  0000205c  afc1fff0	sw	-16(r30),r1
 1406  00002060  0800004c	j	L92_LF2
 1407  00002064  54000000	nop; delay slot nop
 1408  00002068          	L93_LF2:
 1409  00002068  8fc10000	lw	r1,(r30)
 1410  0000206c  90220000	lbu	r2,(r1)
 1411  00002070  6c410040	sgtui	r1,r2,#64
 1412  00002074  10200030	beqz	r1,L95_LF2
 1413  00002078  54000000	nop; delay slot nop
 1414  0000207c  8fc10000	lw	r1,(r30)
 1415  00002080  90220000	lbu	r2,(r1)
 1416  00002084  7041005a	sleui	r1,r2,#90
 1417  00002088  1020001c	beqz	r1,L95_LF2
 1418  0000208c  54000000	nop; delay slot nop
 1419  00002090  8fc10000	lw	r1,(r30)
 1420  00002094  90220000	lbu	r2,(r1)
 1421  00002098  2041ffc9	addi	r1,r2,#-55
 1422  0000209c  afc1fff0	sw	-16(r30),r1
 1423  000020a0  0800000c	j	L92_LF2
 1424  000020a4  54000000	nop; delay slot nop
 1425  000020a8          	L95_LF2:
 1426  000020a8  200103e8	addi	r1,r0,#1000
 1427  000020ac  afc1fff0	sw	-16(r30),r1
 1428  000020b0          	L96_LF2:
 1429  000020b0          	L94_LF2:
 1430  000020b0          	L92_LF2:
 1431  000020b0  8fc1fff0	lw	r1,-16(r30)
 1432  000020b4  8fc20008	lw	r2,8(r30)
 1433  000020b8  0022082a	slt	r1,r1,r2
 1434  000020bc  10200040	beqz	r1,L90_LF2
 1435  000020c0  54000000	nop; delay slot nop
 1436  000020c4  8fc1fff4	lw	r1,-12(r30)
 1437  000020c8  8fc20008	lw	r2,8(r30)
 1438  000020cc  00200035	movi2fp	f0,r1
 1439  000020d0  00400835	movi2fp	f1,r2
 1440  000020d4  0401000e	mult	f0,f0,f1
 1441  000020d8  00000834	movfp2i	r1,f0
 1442  000020dc  afc1fff4	sw	-12(r30),r1
 1443  000020e0  8fc1fff4	lw	r1,-12(r30)
 1444  000020e4  8fc2fff0	lw	r2,-16(r30)
 1445  000020e8  00220820	add	r1,r1,r2
 1446  000020ec  afc1fff4	sw	-12(r30),r1
 1447  000020f0  8fc20000	lw	r2,(r30)
 1448  000020f4  20410001	addi	r1,r2,#1
 1449  000020f8  00011020	add	r2,r0,r1
 1450  000020fc  afc20000	sw	(r30),r2
 1451  00002100          	L97_LF2:
 1452  00002100          	L90_LF2:
 1453  00002100  8fc1fff0	lw	r1,-16(r30)
 1454  00002104  8fc20008	lw	r2,8(r30)
 1455  00002108  0022082a	slt	r1,r1,r2
 1456  0000210c  1420000c	bnez	r1,L98_LF2
 1457  00002110  54000000	nop; delay slot nop
 1458  00002114  0800000c	j	L89_LF2
 1459  00002118  54000000	nop; delay slot nop
 1460  0000211c          	L98_LF2:
 1461  0000211c  0bfffec8	j	L88_LF2
 1462  00002120  54000000	nop; delay slot nop
 1463  00002124          	L89_LF2:
 1464  00002124  8fc10004	lw	r1,4(r30)
 1465  00002128  64220000	snei	r2,r1,#0
 1466  0000212c  10400010	beqz	r2,L99_LF2
 1467  00002130  54000000	nop; delay slot nop
 1468  00002134  8fc10004	lw	r1,4(r30)
 1469  00002138  8fc20000	lw	r2,(r30)
 1470  0000213c  ac220000	sw	(r1),r2
 1471  00002140          	L99_LF2:
 1472  00002140  8fc1fff4	lw	r1,-12(r30)
 1473  00002144  8fc2ffec	lw	r2,-20(r30)
 1474  00002148  00200035	movi2fp	f0,r1
 1475  0000214c  00400835	movi2fp	f1,r2
 1476  00002150  0401000e	mult	f0,f0,f1
 1477  00002154  00000834	movfp2i	r1,f0
 1478  00002158  afc1fff4	sw	-12(r30),r1
 1479  0000215c  8fc1fff4	lw	r1,-12(r30)
 1480  00002160  08000004	j	L72_LF2
 1481  00002164  54000000	nop; delay slot nop
 1482  00002168          	L72_LF2:
 1483  00002168  8fa20000	lw	r2,0(r29)
 1484  0000216c  8fdffff8	lw	r31,-8(r30)
 1485  00002170  001ee820	add	r29,r0,r30
 1486  00002174  8fdefffc	lw	r30,-4(r30)
 1487  00002178  4be00000	jr	r31
 1488  0000217c  54000000	nop
 1489  00002180          	.endproc _dstrtol
 1490  00002180          	.align 2
 1491  00002180          	.proc _bcopy
 1492  00002180          	.global _bcopy
 1493  00002180          	_bcopy:
 1494                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1495  00002180  afbefffc	sw	-4(r29),r30; push fp
 1496  00002184  001df020	add	r30,r0,r29; fp = sp
 1497  00002188  afbffff8	sw	-8(r29),r31; push ret addr
 1498  0000218c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1499  00002190  afa20000	sw	0(r29),r2
 1500  00002194  afa30004	sw	4(r29),r3
 1501  00002198  54000000	nop
 1502  0000219c          	L101_LF2:
 1503  0000219c  8fc10008	lw	r1,8(r30)
 1504  000021a0  2022ffff	addi	r2,r1,#-1
 1505  000021a4  afc20008	sw	8(r30),r2
 1506  000021a8  6c210000	sgti	r1,r1,#0
 1507  000021ac  1420000c	bnez	r1,L103_LF2
 1508  000021b0  54000000	nop; delay slot nop
 1509  000021b4  0800002c	j	L102_LF2
 1510  000021b8  54000000	nop; delay slot nop
 1511  000021bc          	L103_LF2:
 1512  000021bc  8fc10004	lw	r1,4(r30)
 1513  000021c0  20220001	addi	r2,r1,#1
 1514  000021c4  afc20004	sw	4(r30),r2
 1515  000021c8  8fc20000	lw	r2,(r30)
 1516  000021cc  20430001	addi	r3,r2,#1
 1517  000021d0  afc30000	sw	(r30),r3
 1518  000021d4  80420000	lb	r2,(r2)
 1519  000021d8  a0220000	sb	(r1),r2
 1520  000021dc  0bffffbc	j	L101_LF2
 1521  000021e0  54000000	nop; delay slot nop
 1522  000021e4          	L102_LF2:
 1523  000021e4          	L100_LF2:
 1524  000021e4  8fa20000	lw	r2,0(r29)
 1525  000021e8  8fa30004	lw	r3,4(r29)
 1526  000021ec  8fdffff8	lw	r31,-8(r30)
 1527  000021f0  001ee820	add	r29,r0,r30
 1528  000021f4  8fdefffc	lw	r30,-4(r30)
 1529  000021f8  4be00000	jr	r31
 1530  000021fc  54000000	nop
 1531  00002200          	.endproc _bcopy
 1532  00002200          	.align 2
 1533  00002200          	.proc _bzero
 1534  00002200          	.global _bzero
 1535  00002200          	_bzero:
 1536                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1537  00002200  afbefffc	sw	-4(r29),r30; push fp
 1538  00002204  001df020	add	r30,r0,r29; fp = sp
 1539  00002208  afbffff8	sw	-8(r29),r31; push ret addr
 1540  0000220c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1541  00002210  afa20000	sw	0(r29),r2
 1542  00002214  54000000	nop
 1543  00002218          	L105_LF2:
 1544  00002218  8fc10004	lw	r1,4(r30)
 1545  0000221c  2022ffff	addi	r2,r1,#-1
 1546  00002220  afc20004	sw	4(r30),r2
 1547  00002224  6c210000	sgti	r1,r1,#0
 1548  00002228  1420000c	bnez	r1,L107_LF2
 1549  0000222c  54000000	nop; delay slot nop
 1550  00002230  08000020	j	L106_LF2
 1551  00002234  54000000	nop; delay slot nop
 1552  00002238          	L107_LF2:
 1553  00002238  8fc10000	lw	r1,(r30)
 1554  0000223c  20220001	addi	r2,r1,#1
 1555  00002240  afc20000	sw	(r30),r2
 1556  00002244  20020000	addi	r2,r0,(#0x0)&0xff
 1557  00002248  a0220000	sb	(r1),r2
 1558  0000224c  0bffffc8	j	L105_LF2
 1559  00002250  54000000	nop; delay slot nop
 1560  00002254          	L106_LF2:
 1561  00002254          	L104_LF2:
 1562  00002254  8fa20000	lw	r2,0(r29)
 1563  00002258  8fdffff8	lw	r31,-8(r30)
 1564  0000225c  001ee820	add	r29,r0,r30
 1565  00002260  8fdefffc	lw	r30,-4(r30)
 1566  00002264  4be00000	jr	r31
 1567  00002268  54000000	nop
 1568  0000226c          	.endproc _bzero
 1569  0000226c          	.align 2
 1570  0000226c          	.proc _min
 1571  0000226c          	.global _min
 1572  0000226c          	_min:
 1573                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1574  0000226c  afbefffc	sw	-4(r29),r30; push fp
 1575  00002270  001df020	add	r30,r0,r29; fp = sp
 1576  00002274  afbffff8	sw	-8(r29),r31; push ret addr
 1577  00002278  2fbd0010	subui	r29,r29,#16; alloc local storage
 1578  0000227c  afa20000	sw	0(r29),r2
 1579  00002280  afa30004	sw	4(r29),r3
 1580  00002284  8fc10000	lw	r1,(r30)
 1581  00002288  8fc20004	lw	r2,4(r30)
 1582  0000228c  0022182c	sle	r3,r1,r2
 1583  00002290  14600008	bnez	r3,L109_LF2
 1584  00002294  54000000	nop; delay slot nop
 1585  00002298  8fc10004	lw	r1,4(r30)
 1586  0000229c          	L109_LF2:
 1587  0000229c  08000004	j	L108_LF2
 1588  000022a0  54000000	nop; delay slot nop
 1589  000022a4          	L108_LF2:
 1590  000022a4  8fa20000	lw	r2,0(r29)
 1591  000022a8  8fa30004	lw	r3,4(r29)
 1592  000022ac  8fdffff8	lw	r31,-8(r30)
 1593  000022b0  001ee820	add	r29,r0,r30
 1594  000022b4  8fdefffc	lw	r30,-4(r30)
 1595  000022b8  4be00000	jr	r31
 1596  000022bc  54000000	nop
 1597  000022c0          	.endproc _min
 1598                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1599                      ;;;
 1600                      ;;; Most of the traps are called in files from libtraps.
 1603  000022c0          	.align 2
 1604  000022c0          	.proc _exit
 1605  000022c0          	.global _exit
 1606  000022c0          	_exit:
 1607  000022c0  44000300	trap	#0x300
 1608  000022c4  4be00000	jr	r31
 1609  000022c8  54000000	nop
 1610  000022cc          	.endproc _exit
 1612                      ; for the benefit of gcc.
 1613  000022cc          	.proc ___main
 1614  000022cc          	.global ___main
 1615  000022cc          	___main:
 1616  000022cc  4be00000	jr	r31
 1617  000022d0  54000000	nop
 1618  000022d4          	.endproc ___main
 1619  000022d4          	.text
 1620  000022d4          	.global _etext
 1621  000022d4          	_etext:
 1622  000022d4          	.align 3
 1623  000022d8          	.data
 1624  00003179          	.global _edata
 1625  00003179          	_edata:
