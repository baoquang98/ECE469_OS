 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 365
    4                      ; Text size: 4680
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore> <han"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c68616e	
   85  0000302c  646c655f	
   85  00003030  746f5f70	
   85  00003034  6167655f	
   85  00003038  6d617070	
   85  0000303c  65645f73	
   85  00003040  656d6170	
   85  00003044  686f7265	
   85  00003048  3e203c68	
   85  0000304c  616e    	
   86  0000304e  646c655f	.ascii "dle_to_page_mapped_lock> <handle_to_page_mapped_cond_var> <handle_to_p"
   86  00003052  746f5f70	
   86  00003056  6167655f	
   86  0000305a  6d617070	
   86  0000305e  65645f6c	
   86  00003062  6f636b3e	
   86  00003066  203c6861	
   86  0000306a  6e646c65	
   86  0000306e  5f746f5f	
   86  00003072  70616765	
   86  00003076  5f6d6170	
   86  0000307a  7065645f	
   86  0000307e  636f6e64	
   86  00003082  5f766172	
   86  00003086  3e203c68	
   86  0000308a  616e646c	
   86  0000308e  655f746f	
   86  00003092  5f70    	
   87  00003094  6167655f	.ascii "age_mapped_cond_var>\n\000"
   87  00003098  6d617070	
   87  0000309c  65645f63	
   87  000030a0  6f6e645f	
   87  000030a4  7661723e	
   87  000030a8  0a00    	
   88  000030aa          	.align 2
   89  000030ac          	LC2_LF0:
   90  000030ac  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   90  000030b0  64206e6f	
   90  000030b4  74206d61	
   90  000030b8  70207468	
   90  000030bc  65207669	
   90  000030c0  72747561	
   90  000030c4  6c206164	
   90  000030c8  64726573	
   90  000030cc  7320746f	
   90  000030d0  20746865	
   90  000030d4  206d656d	
   90  000030d8  6f727920	
   90  000030dc  696e2000	
   91  000030e0          	.align 2
   92  000030e0          	LC3_LF0:
   93  000030e0  2c206578	.ascii ", exiting...\n\000"
   93  000030e4  6974696e	
   93  000030e8  672e2e2e	
   93  000030ec  0a00    	
   94  000030ee          	.align 2
   95  000030f0          	LC4_LF0:
   96  000030f0  636f6e73	.ascii "consumer: My PID is %d\n\000"
   96  000030f4  756d6572	
   96  000030f8  3a204d79	
   96  000030fc  20504944	
   96  00003100  20697320	
   96  00003104  25640a00	
   97  00003108          	.align 2
   98  00003108          	LC5_LF0:
   99  00003108  436f6e73	.ascii "Consumer %d removed: %c\n\000"
   99  0000310c  756d6572	
   99  00003110  20256420	
   99  00003114  72656d6f	
   99  00003118  7665643a	
   99  0000311c  2025630a	
   99  00003120  00      	
  100  00003121          	.align 2
  101  00003124          	LC6_LF0:
  102  00003124  636f6e73	.ascii "consumer: PID %d is complete.\n\000"
  102  00003128  756d6572	
  102  0000312c  3a205049	
  102  00003130  44202564	
  102  00003134  20697320	
  102  00003138  636f6d70	
  102  0000313c  6c657465	
  102  00003140  2e0a00  	
  103  00003143          	.align 2
  104  00003144          	LC7_LF0:
  105  00003144  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  105  00003148  73656d61	
  105  0000314c  70686f72	
  105  00003150  6520735f	
  105  00003154  70726f63	
  105  00003158  735f636f	
  105  0000315c  6d706c65	
  105  00003160  74656420	
  105  00003164  28256429	
  105  00003168  20696e20	
  105  0000316c  00      	
  106  0000316d          	.text
  107  000010d4          	.align 2
  108  000010d4          	.proc _main
  109  000010d4          	.global _main
  110  000010d4          	_main:
  111                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  112  000010d4  afbefffc	sw	-4(r29),r30; push fp
  113  000010d8  001df020	add	r30,r0,r29; fp = sp
  114  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  115  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  116  000010e4  8fc20000	lw	r2,(r30)
  117  000010e8  8fc70004	lw	r7,4(r30)
  118  000010ec  0c001150	jal	___main
  119  000010f0  54000000	nop; not filled.
  120  000010f4  20060000	addi	r6,r0,#0
  121  000010f8  64410006	snei	r1,r2,#6
  122  000010fc  1020004c	beqz	r1,L14_LF0
  123  00001100  54000000	nop; not filled.
  124  00001104  23bdfff8	addi	r29,r29,#-8
  125  00001108  3c0c0000	lhi	r12,((LC0_LF0)>>16)&0xffff
  126  0000110c  258c3000	addui	r12,r12,(LC0_LF0)&0xffff
  127  00001110  afac0000	sw	(r29),r12
  128  00001114  0c000320	jal	_Printf
  129  00001118  54000000	nop; not filled.
  130  0000111c  8cec0000	lw	r12,(r7)
  131  00001120  afac0000	sw	(r29),r12
  132  00001124  0c000310	jal	_Printf
  133  00001128  54000000	nop; not filled.
  134  0000112c  3c0c0000	lhi	r12,((LC1_LF0)>>16)&0xffff
  135  00001130  258c3008	addui	r12,r12,(LC1_LF0)&0xffff
  136  00001134  afac0000	sw	(r29),r12
  137  00001138  0c0002fc	jal	_Printf
  138  0000113c  54000000	nop; not filled.
  139  00001140  0c0003a8	jal	_Exit
  140  00001144  54000000	nop; not filled.
  141  00001148  23bd0008	addi	r29,r29,#8
  142  0000114c          	L14_LF0:
  143  0000114c  23bdfff0	addi	r29,r29,#-16
  144  00001150  8cec0004	lw	r12,4(r7)
  145  00001154  afac0000	sw	(r29),r12
  146  00001158  200c0000	addi	r12,r0,#0
  147  0000115c  afac0004	sw	4(r29),r12
  148  00001160  200c000a	addi	r12,r0,#10
  149  00001164  afac0008	sw	8(r29),r12
  150  00001168  0c000c2c	jal	_dstrtol
  151  0000116c  54000000	nop; not filled.
  152  00001170  00011020	add	r2,r0,r1
  153  00001174  8cec0008	lw	r12,8(r7)
  154  00001178  afac0000	sw	(r29),r12
  155  0000117c  200c0000	addi	r12,r0,#0
  156  00001180  afac0004	sw	4(r29),r12
  157  00001184  200c000a	addi	r12,r0,#10
  158  00001188  afac0008	sw	8(r29),r12
  159  0000118c  0c000c08	jal	_dstrtol
  160  00001190  54000000	nop; not filled.
  161  00001194  00015820	add	r11,r0,r1
  162  00001198  8cec000c	lw	r12,12(r7)
  163  0000119c  afac0000	sw	(r29),r12
  164  000011a0  200c0000	addi	r12,r0,#0
  165  000011a4  afac0004	sw	4(r29),r12
  166  000011a8  200c000a	addi	r12,r0,#10
  167  000011ac  afac0008	sw	8(r29),r12
  168  000011b0  0c000be4	jal	_dstrtol
  169  000011b4  54000000	nop; not filled.
  170  000011b8  00012820	add	r5,r0,r1
  171  000011bc  8cec0010	lw	r12,16(r7)
  172  000011c0  afac0000	sw	(r29),r12
  173  000011c4  200c0000	addi	r12,r0,#0
  174  000011c8  afac0004	sw	4(r29),r12
  175  000011cc  200c000a	addi	r12,r0,#10
  176  000011d0  afac0008	sw	8(r29),r12
  177  000011d4  0c000bc0	jal	_dstrtol
  178  000011d8  54000000	nop; not filled.
  179  000011dc  00014820	add	r9,r0,r1
  180  000011e0  8cec0014	lw	r12,20(r7)
  181  000011e4  afac0000	sw	(r29),r12
  182  000011e8  200c0000	addi	r12,r0,#0
  183  000011ec  afac0004	sw	4(r29),r12
  184  000011f0  200c000a	addi	r12,r0,#10
  185  000011f4  afac0008	sw	8(r29),r12
  186  000011f8  0c000b9c	jal	_dstrtol
  187  000011fc  54000000	nop; not filled.
  188  00001200  00014020	add	r8,r0,r1
  189  00001204  afa20000	sw	(r29),r2
  190  00001208  0c00025c	jal	_shmat
  191  0000120c  54000000	nop; not filled.
  192  00001210  00012020	add	r4,r0,r1
  193  00001214  23bd0010	addi	r29,r29,#16
  194  00001218  64810000	snei	r1,r4,#0
  195  0000121c  1420004c	bnez	r1,L15_LF0
  196  00001220  54000000	nop; not filled.
  197  00001224  23bdfff8	addi	r29,r29,#-8
  198  00001228  3c0c0000	lhi	r12,((LC2_LF0)>>16)&0xffff
  199  0000122c  258c30ac	addui	r12,r12,(LC2_LF0)&0xffff
  200  00001230  afac0000	sw	(r29),r12
  201  00001234  0c000200	jal	_Printf
  202  00001238  54000000	nop; not filled.
  203  0000123c  8cec0000	lw	r12,(r7)
  204  00001240  afac0000	sw	(r29),r12
  205  00001244  0c0001f0	jal	_Printf
  206  00001248  54000000	nop; not filled.
  207  0000124c  3c0c0000	lhi	r12,((LC3_LF0)>>16)&0xffff
  208  00001250  258c30e0	addui	r12,r12,(LC3_LF0)&0xffff
  209  00001254  afac0000	sw	(r29),r12
  210  00001258  0c0001dc	jal	_Printf
  211  0000125c  54000000	nop; not filled.
  212  00001260  0c000288	jal	_Exit
  213  00001264  54000000	nop; not filled.
  214  00001268  23bd0008	addi	r29,r29,#8
  215  0000126c          	L15_LF0:
  216  0000126c  0c0001d4	jal	_getpid
  217  00001270  54000000	nop; not filled.
  218  00001274  23bdfff8	addi	r29,r29,#-8
  219  00001278  3c0c0000	lhi	r12,((LC4_LF0)>>16)&0xffff
  220  0000127c  258c30f0	addui	r12,r12,(LC4_LF0)&0xffff
  221  00001280  afac0000	sw	(r29),r12
  222  00001284  afa10004	sw	4(r29),r1
  223  00001288  0c0001ac	jal	_Printf
  224  0000128c  54000000	nop; not filled.
  225  00001290  23bd0008	addi	r29,r29,#8
  226  00001294  200a0005	addi	r10,r0,#5
  227  00001298          	L19_LF0:
  228  00001298  23bdfff8	addi	r29,r29,#-8
  229  0000129c  afa50000	sw	(r29),r5
  230  000012a0  0c000200	jal	_lock_acquire
  231  000012a4  54000000	nop; not filled.
  232  000012a8  8c820000	lw	r2,(r4)
  233  000012ac  8c810004	lw	r1,4(r4)
  234  000012b0  23bd0008	addi	r29,r29,#8
  235  000012b4  00410828	seq	r1,r2,r1
  236  000012b8  10200018	beqz	r1,L20_LF0
  237  000012bc  54000000	nop; not filled.
  238  000012c0  23bdfff8	addi	r29,r29,#-8
  239  000012c4  afa90000	sw	(r29),r9
  240  000012c8  0c0001fc	jal	_cond_wait
  241  000012cc  54000000	nop; not filled.
  242  000012d0  23bd0008	addi	r29,r29,#8
  243  000012d4          	L20_LF0:
  244  000012d4  0c00016c	jal	_getpid
  245  000012d8  54000000	nop; not filled.
  246  000012dc  23bdfff0	addi	r29,r29,#-16
  247  000012e0  3c0c0000	lhi	r12,((LC5_LF0)>>16)&0xffff
  248  000012e4  258c3108	addui	r12,r12,(LC5_LF0)&0xffff
  249  000012e8  afac0000	sw	(r29),r12
  250  000012ec  afa10004	sw	4(r29),r1
  251  000012f0  8c810004	lw	r1,4(r4)
  252  000012f4  00810820	add	r1,r4,r1
  253  000012f8  90210008	lbu	r1,8(r1)
  254  000012fc  afa10008	sw	8(r29),r1
  255  00001300  0c000134	jal	_Printf
  256  00001304  54000000	nop; not filled.
  257  00001308  8c810004	lw	r1,4(r4)
  258  0000130c  20230001	addi	r3,r1,#1
  259  00001310  00600035	movi2fp	f0,r3
  260  00001314  01400835	movi2fp	f1,r10
  261  00001318  0401000f	div	f0,f0,f1
  262  0000131c  00001034	movfp2i	r2,f0
  263  00001320  50410002	slli	r1,r2,#0x2
  264  00001324  00220820	add	r1,r1,r2
  265  00001328  00610822	sub	r1,r3,r1
  266  0000132c  ac810004	sw	4(r4),r1
  267  00001330  afa80000	sw	(r29),r8
  268  00001334  0c00019c	jal	_cond_signal
  269  00001338  54000000	nop; not filled.
  270  0000133c  afa50000	sw	(r29),r5
  271  00001340  0c00016c	jal	_lock_release
  272  00001344  54000000	nop; not filled.
  273  00001348  23bd0010	addi	r29,r29,#16
  274  0000134c  20c60001	addi	r6,r6,#1
  275  00001350  68c1000a	sltui	r1,r6,#10
  276  00001354  1420ff40	bnez	r1,L19_LF0
  277  00001358  54000000	nop; not filled.
  278  0000135c  0c0000e4	jal	_getpid
  279  00001360  54000000	nop; not filled.
  280  00001364  23bdfff8	addi	r29,r29,#-8
  281  00001368  3c0c0000	lhi	r12,((LC6_LF0)>>16)&0xffff
  282  0000136c  258c3124	addui	r12,r12,(LC6_LF0)&0xffff
  283  00001370  afac0000	sw	(r29),r12
  284  00001374  afa10004	sw	4(r29),r1
  285  00001378  0c0000bc	jal	_Printf
  286  0000137c  54000000	nop; not filled.
  287  00001380  afab0000	sw	(r29),r11
  288  00001384  0c000104	jal	_sem_signal
  289  00001388  54000000	nop; not filled.
  290  0000138c  23bd0008	addi	r29,r29,#8
  291  00001390  64210001	snei	r1,r1,#1
  292  00001394  10200050	beqz	r1,L22_LF0
  293  00001398  54000000	nop; not filled.
  294  0000139c  23bdfff8	addi	r29,r29,#-8
  295  000013a0  3c0c0000	lhi	r12,((LC7_LF0)>>16)&0xffff
  296  000013a4  258c3144	addui	r12,r12,(LC7_LF0)&0xffff
  297  000013a8  afac0000	sw	(r29),r12
  298  000013ac  afab0004	sw	4(r29),r11
  299  000013b0  0c000084	jal	_Printf
  300  000013b4  54000000	nop; not filled.
  301  000013b8  8ce70000	lw	r7,(r7)
  302  000013bc  afa70000	sw	(r29),r7
  303  000013c0  0c000074	jal	_Printf
  304  000013c4  54000000	nop; not filled.
  305  000013c8  3c0c0000	lhi	r12,((LC3_LF0)>>16)&0xffff
  306  000013cc  258c30e0	addui	r12,r12,(LC3_LF0)&0xffff
  307  000013d0  afac0000	sw	(r29),r12
  308  000013d4  0c000060	jal	_Printf
  309  000013d8  54000000	nop; not filled.
  310  000013dc  0c00010c	jal	_Exit
  311  000013e0  54000000	nop; not filled.
  312  000013e4  23bd0008	addi	r29,r29,#8
  313  000013e8          	L22_LF0:
  314  000013e8  0c000e48	jal	_exit
  315  000013ec  54000000	nop
  316  000013f0          	.endproc _main
  317                      ;;;
  318                      ;;; Stub functions for DLX traps.
  319                      ;;;
  320                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  321                      ;;;
  322                      ;;; The traps such as Open and Close
  323                      ;;; (note the capital letters) are for use by user programs.  The traps
  324                      ;;; with names such as open and close (lower case) are for use by the OS.
  325                      ;;;
  328  000013f0          	.align 2
  330                      ;;; The following are the traps to be used by user-level programs
  331                      ;;;
  333  000013f0          	.align 2
  334  000013f0          	.proc _Open
  335  000013f0          	.global _Open
  336  000013f0          	_Open:
  337                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  338                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  339                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  340  000013f0  44000213	trap	#0x213
  341  000013f4  4be00000	jr	r31
  342  000013f8  54000000	nop
  343  000013fc          	.endproc _Open
  345  000013fc          	.proc _Close
  346  000013fc          	.global _Close
  347  000013fc          	_Close:
  348  000013fc  44000214	trap	#0x214
  349  00001400  4be00000	jr	r31
  350  00001404  54000000	nop
  351  00001408          	.endproc _Close
  353  00001408          	.proc _Read
  354  00001408          	.global _Read
  355  00001408          	_Read:
  356  00001408  44000210	trap	#0x210
  357  0000140c  4be00000	jr	r31
  358  00001410  54000000	nop
  359  00001414          	.endproc _Read
  361  00001414          	.proc _Write
  362  00001414          	.global _Write
  363  00001414          	_Write:
  364  00001414  44000211	trap	#0x211
  365  00001418  4be00000	jr	r31
  366  0000141c  54000000	nop
  367  00001420          	.endproc _Write
  369  00001420          	.proc _Lseek
  370  00001420          	.global _Lseek
  371  00001420          	_Lseek:
  372  00001420  44000212	trap	#0x212
  373  00001424  4be00000	jr	r31
  374  00001428  54000000	nop
  375  0000142c          	.endproc _Lseek
  377  0000142c          	.proc _Putchar
  378  0000142c          	.global _Putchar
  379  0000142c          	_Putchar:
  380  0000142c  44000280	trap	#0x280
  381  00001430  4be00000	jr	r31
  382  00001434  54000000	nop
  383  00001438          	.endproc _Putchar
  385  00001438          	.proc _Printf
  386  00001438          	.global _Printf
  387  00001438          	_Printf:
  388  00001438  44000201	trap	#0x201
  389  0000143c  4be00000	jr	r31
  390  00001440  54000000	nop
  391  00001444          	.endproc _Printf
  393  00001444          	.proc _getpid
  394  00001444          	.global _getpid
  395  00001444          	_getpid:
  396  00001444  44000431	trap	#0x431
  397  00001448  4be00000	jr	r31
  398  0000144c  54000000	nop
  399  00001450          	.endproc _getpid
  401  00001450          	.proc _process_create
  402  00001450          	.global _process_create
  403  00001450          	_process_create:
  404  00001450  44000432	trap	#0x432
  405  00001454  4be00000	jr	r31
  406  00001458  54000000	nop
  407  0000145c          	.endproc _process_create
  409  0000145c          	.proc _shmget
  410  0000145c          	.global _shmget
  411  0000145c          	_shmget:
  412  0000145c  44000440	trap	#0x440
  413  00001460  4be00000	jr	r31
  414  00001464  54000000	nop
  415  00001468          	.endproc _shmget
  417  00001468          	.proc _shmat
  418  00001468          	.global _shmat
  419  00001468          	_shmat:
  420  00001468  44000441	trap	#0x441
  421  0000146c  4be00000	jr	r31
  422  00001470  54000000	nop
  423  00001474          	.endproc _shmat
  425  00001474          	.proc _sem_create
  426  00001474          	.global _sem_create
  427  00001474          	_sem_create:
  428  00001474  44000450	trap	#0x450
  429  00001478  4be00000	jr	r31
  430  0000147c  54000000	nop
  431  00001480          	.endproc _sem_create
  433  00001480          	.proc _sem_wait
  434  00001480          	.global _sem_wait
  435  00001480          	_sem_wait:
  436  00001480  44000451	trap	#0x451
  437  00001484  4be00000	jr	r31
  438  00001488  54000000	nop
  439  0000148c          	.endproc _sem_wait
  441  0000148c          	.proc _sem_signal
  442  0000148c          	.global _sem_signal
  443  0000148c          	_sem_signal:
  444  0000148c  44000452	trap	#0x452
  445  00001490  4be00000	jr	r31
  446  00001494  54000000	nop
  447  00001498          	.endproc _sem_signal
  449  00001498          	.proc _lock_create
  450  00001498          	.global _lock_create
  451  00001498          	_lock_create:
  452  00001498  44000453	trap	#0x453
  453  0000149c  4be00000	jr	r31
  454  000014a0  54000000	nop
  455  000014a4          	.endproc _lock_create
  457  000014a4          	.proc _lock_acquire
  458  000014a4          	.global _lock_acquire
  459  000014a4          	_lock_acquire:
  460  000014a4  44000454	trap	#0x454
  461  000014a8  4be00000	jr	r31
  462  000014ac  54000000	nop
  463  000014b0          	.endproc _lock_acquire
  465  000014b0          	.proc _lock_release
  466  000014b0          	.global _lock_release
  467  000014b0          	_lock_release:
  468  000014b0  44000455	trap	#0x455
  469  000014b4  4be00000	jr	r31
  470  000014b8  54000000	nop
  471  000014bc          	.endproc _lock_release
  473  000014bc          	.proc _cond_create
  474  000014bc          	.global _cond_create
  475  000014bc          	_cond_create:
  476  000014bc  44000456	trap	#0x456
  477  000014c0  4be00000	jr	r31
  478  000014c4  54000000	nop
  479  000014c8          	.endproc _cond_create
  481  000014c8          	.proc _cond_wait
  482  000014c8          	.global _cond_wait
  483  000014c8          	_cond_wait:
  484  000014c8  44000457	trap	#0x457
  485  000014cc  4be00000	jr	r31
  486  000014d0  54000000	nop
  487  000014d4          	.endproc _cond_wait
  489  000014d4          	.proc _cond_signal
  490  000014d4          	.global _cond_signal
  491  000014d4          	_cond_signal:
  492  000014d4  44000458	trap	#0x458
  493  000014d8  4be00000	jr	r31
  494  000014dc  54000000	nop
  495  000014e0          	.endproc _cond_signal
  497  000014e0          	.proc _cond_broadcast
  498  000014e0          	.global _cond_broadcast
  499  000014e0          	_cond_broadcast:
  500  000014e0  44000455	trap	#0x455
  501  000014e4  4be00000	jr	r31
  502  000014e8  54000000	nop
  503  000014ec          	.endproc _cond_broadcast
  505  000014ec          	.proc _Exit
  506  000014ec          	.global _Exit
  507  000014ec          	_Exit:
  508  000014ec  44000500	trap	#0x500
  509  000014f0  4be00000	jr	r31
  510  000014f4  54000000	nop
  511  000014f8          	.endproc _Exit
  512                      ; Compiled by GCC
  514  000014f8          	.align 2
  515  000014f8          	.proc _isspace
  516  000014f8          	.global _isspace
  517  000014f8          	_isspace:
  518                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  519  000014f8  afbefffc	sw	-4(r29),r30; push fp
  520  000014fc  001df020	add	r30,r0,r29; fp = sp
  521  00001500  afbffff8	sw	-8(r29),r31; push ret addr
  522  00001504  2fbd0018	subui	r29,r29,#24; alloc local storage
  523  00001508  afa20000	sw	0(r29),r2
  524  0000150c  afa30004	sw	4(r29),r3
  525  00001510  afa40008	sw	8(r29),r4
  526  00001514  83c20003	lb	r2,3(r30)
  527  00001518  20010000	addi	r1,r0,#0
  528  0000151c  304300ff	andi	r3,r2,#0x00ff
  529  00001520  60640020	seqi	r4,r3,#32
  530  00001524  1480002c	bnez	r4,L3_LF2
  531  00001528  54000000	nop; delay slot nop
  532  0000152c  304300ff	andi	r3,r2,#0x00ff
  533  00001530  60640009	seqi	r4,r3,#9
  534  00001534  1480001c	bnez	r4,L3_LF2
  535  00001538  54000000	nop; delay slot nop
  536  0000153c  304300ff	andi	r3,r2,#0x00ff
  537  00001540  6064000a	seqi	r4,r3,#10
  538  00001544  1480000c	bnez	r4,L3_LF2
  539  00001548  54000000	nop; delay slot nop
  540  0000154c  08000008	j	L2_LF2
  541  00001550  54000000	nop; delay slot nop
  542  00001554          	L3_LF2:
  543  00001554  20010001	addi	r1,r0,#1
  544  00001558          	L2_LF2:
  545  00001558  08000004	j	L1_LF2
  546  0000155c  54000000	nop; delay slot nop
  547  00001560          	L1_LF2:
  548  00001560  8fa20000	lw	r2,0(r29)
  549  00001564  8fa30004	lw	r3,4(r29)
  550  00001568  8fa40008	lw	r4,8(r29)
  551  0000156c  8fdffff8	lw	r31,-8(r30)
  552  00001570  001ee820	add	r29,r0,r30
  553  00001574  8fdefffc	lw	r30,-4(r30)
  554  00001578  4be00000	jr	r31
  555  0000157c  54000000	nop
  556  00001580          	.endproc _isspace
  557  00001580          	.align 2
  558  00001580          	.proc _isxdigit
  559  00001580          	.global _isxdigit
  560  00001580          	_isxdigit:
  561                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  562  00001580  afbefffc	sw	-4(r29),r30; push fp
  563  00001584  001df020	add	r30,r0,r29; fp = sp
  564  00001588  afbffff8	sw	-8(r29),r31; push ret addr
  565  0000158c  2fbd0018	subui	r29,r29,#24; alloc local storage
  566  00001590  afa20000	sw	0(r29),r2
  567  00001594  afa30004	sw	4(r29),r3
  568  00001598  afa40008	sw	8(r29),r4
  569  0000159c  83c20003	lb	r2,3(r30)
  570  000015a0  20010000	addi	r1,r0,#0
  571  000015a4  304300ff	andi	r3,r2,#0x00ff
  572  000015a8  6c64002f	sgtui	r4,r3,#47
  573  000015ac  1080001c	beqz	r4,L7_LF2
  574  000015b0  54000000	nop; delay slot nop
  575  000015b4  304300ff	andi	r3,r2,#0x00ff
  576  000015b8  70640039	sleui	r4,r3,#57
  577  000015bc  1480005c	bnez	r4,L6_LF2
  578  000015c0  54000000	nop; delay slot nop
  579  000015c4  08000004	j	L7_LF2
  580  000015c8  54000000	nop; delay slot nop
  581  000015cc          	L7_LF2:
  582  000015cc  304300ff	andi	r3,r2,#0x00ff
  583  000015d0  6c640060	sgtui	r4,r3,#96
  584  000015d4  1080001c	beqz	r4,L8_LF2
  585  000015d8  54000000	nop; delay slot nop
  586  000015dc  304300ff	andi	r3,r2,#0x00ff
  587  000015e0  70640066	sleui	r4,r3,#102
  588  000015e4  14800034	bnez	r4,L6_LF2
  589  000015e8  54000000	nop; delay slot nop
  590  000015ec  08000004	j	L8_LF2
  591  000015f0  54000000	nop; delay slot nop
  592  000015f4          	L8_LF2:
  593  000015f4  304300ff	andi	r3,r2,#0x00ff
  594  000015f8  6c640040	sgtui	r4,r3,#64
  595  000015fc  10800020	beqz	r4,L5_LF2
  596  00001600  54000000	nop; delay slot nop
  597  00001604  304300ff	andi	r3,r2,#0x00ff
  598  00001608  70640041	sleui	r4,r3,#65
  599  0000160c  1480000c	bnez	r4,L6_LF2
  600  00001610  54000000	nop; delay slot nop
  601  00001614  08000008	j	L5_LF2
  602  00001618  54000000	nop; delay slot nop
  603  0000161c          	L6_LF2:
  604  0000161c  20010001	addi	r1,r0,#1
  605  00001620          	L5_LF2:
  606  00001620  08000004	j	L4_LF2
  607  00001624  54000000	nop; delay slot nop
  608  00001628          	L4_LF2:
  609  00001628  8fa20000	lw	r2,0(r29)
  610  0000162c  8fa30004	lw	r3,4(r29)
  611  00001630  8fa40008	lw	r4,8(r29)
  612  00001634  8fdffff8	lw	r31,-8(r30)
  613  00001638  001ee820	add	r29,r0,r30
  614  0000163c  8fdefffc	lw	r30,-4(r30)
  615  00001640  4be00000	jr	r31
  616  00001644  54000000	nop
  617  00001648          	.endproc _isxdigit
  618  00001648          	.align 2
  619  00001648          	.proc _dstrcpy
  620  00001648          	.global _dstrcpy
  621  00001648          	_dstrcpy:
  622                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  623  00001648  afbefffc	sw	-4(r29),r30; push fp
  624  0000164c  001df020	add	r30,r0,r29; fp = sp
  625  00001650  afbffff8	sw	-8(r29),r31; push ret addr
  626  00001654  2fbd0018	subui	r29,r29,#24; alloc local storage
  627  00001658  afa20000	sw	0(r29),r2
  628  0000165c  afa30004	sw	4(r29),r3
  629  00001660  8fc10000	lw	r1,(r30)
  630  00001664  afc1fff4	sw	-12(r30),r1
  631  00001668          	L10_LF2:
  632  00001668  8fc10000	lw	r1,(r30)
  633  0000166c  20220001	addi	r2,r1,#1
  634  00001670  afc20000	sw	(r30),r2
  635  00001674  8fc20004	lw	r2,4(r30)
  636  00001678  20430001	addi	r3,r2,#1
  637  0000167c  afc30004	sw	4(r30),r3
  638  00001680  80420000	lb	r2,(r2)
  639  00001684  a0220000	sb	(r1),r2
  640  00001688  a3c2fff3	sb	-13(r30),r2
  641  0000168c          	L12_LF2:
  642  0000168c  93c1fff3	lbu	r1,-13(r30)
  643  00001690  64220000	snei	r2,r1,#0
  644  00001694  1440000c	bnez	r2,L13_LF2
  645  00001698  54000000	nop; delay slot nop
  646  0000169c  0800000c	j	L11_LF2
  647  000016a0  54000000	nop; delay slot nop
  648  000016a4          	L13_LF2:
  649  000016a4  0bffffc0	j	L10_LF2
  650  000016a8  54000000	nop; delay slot nop
  651  000016ac          	L11_LF2:
  652  000016ac  8fc1fff4	lw	r1,-12(r30)
  653  000016b0  08000004	j	L9_LF2
  654  000016b4  54000000	nop; delay slot nop
  655  000016b8          	L9_LF2:
  656  000016b8  8fa20000	lw	r2,0(r29)
  657  000016bc  8fa30004	lw	r3,4(r29)
  658  000016c0  8fdffff8	lw	r31,-8(r30)
  659  000016c4  001ee820	add	r29,r0,r30
  660  000016c8  8fdefffc	lw	r30,-4(r30)
  661  000016cc  4be00000	jr	r31
  662  000016d0  54000000	nop
  663  000016d4          	.endproc _dstrcpy
  664  000016d4          	.align 2
  665  000016d4          	.proc _dstrncpy
  666  000016d4          	.global _dstrncpy
  667  000016d4          	_dstrncpy:
  668                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  669  000016d4  afbefffc	sw	-4(r29),r30; push fp
  670  000016d8  001df020	add	r30,r0,r29; fp = sp
  671  000016dc  afbffff8	sw	-8(r29),r31; push ret addr
  672  000016e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  673  000016e4  afa20000	sw	0(r29),r2
  674  000016e8  afa30004	sw	4(r29),r3
  675  000016ec  8fc10000	lw	r1,(r30)
  676  000016f0  afc1fff4	sw	-12(r30),r1
  677  000016f4          	L15_LF2:
  678  000016f4  8fc10008	lw	r1,8(r30)
  679  000016f8  2022ffff	addi	r2,r1,#-1
  680  000016fc  afc20008	sw	8(r30),r2
  681  00001700  70210000	slei	r1,r1,#0
  682  00001704  1020000c	beqz	r1,L18_LF2
  683  00001708  54000000	nop; delay slot nop
  684  0000170c  08000048	j	L16_LF2
  685  00001710  54000000	nop; delay slot nop
  686  00001714          	L18_LF2:
  687  00001714  8fc10000	lw	r1,(r30)
  688  00001718  20220001	addi	r2,r1,#1
  689  0000171c  afc20000	sw	(r30),r2
  690  00001720  8fc20004	lw	r2,4(r30)
  691  00001724  20430001	addi	r3,r2,#1
  692  00001728  afc30004	sw	4(r30),r3
  693  0000172c  80420000	lb	r2,(r2)
  694  00001730  a0220000	sb	(r1),r2
  695  00001734  a3c2fff3	sb	-13(r30),r2
  696  00001738          	L17_LF2:
  697  00001738  93c1fff3	lbu	r1,-13(r30)
  698  0000173c  64220000	snei	r2,r1,#0
  699  00001740  1440000c	bnez	r2,L19_LF2
  700  00001744  54000000	nop; delay slot nop
  701  00001748  0800000c	j	L16_LF2
  702  0000174c  54000000	nop; delay slot nop
  703  00001750          	L19_LF2:
  704  00001750  0bffffa0	j	L15_LF2
  705  00001754  54000000	nop; delay slot nop
  706  00001758          	L16_LF2:
  707  00001758  8fc1fff4	lw	r1,-12(r30)
  708  0000175c  08000004	j	L14_LF2
  709  00001760  54000000	nop; delay slot nop
  710  00001764          	L14_LF2:
  711  00001764  8fa20000	lw	r2,0(r29)
  712  00001768  8fa30004	lw	r3,4(r29)
  713  0000176c  8fdffff8	lw	r31,-8(r30)
  714  00001770  001ee820	add	r29,r0,r30
  715  00001774  8fdefffc	lw	r30,-4(r30)
  716  00001778  4be00000	jr	r31
  717  0000177c  54000000	nop
  718  00001780          	.endproc _dstrncpy
  719  00001780          	.align 2
  720  00001780          	.proc _dstrcat
  721  00001780          	.global _dstrcat
  722  00001780          	_dstrcat:
  723                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  724  00001780  afbefffc	sw	-4(r29),r30; push fp
  725  00001784  001df020	add	r30,r0,r29; fp = sp
  726  00001788  afbffff8	sw	-8(r29),r31; push ret addr
  727  0000178c  2fbd0018	subui	r29,r29,#24; alloc local storage
  728  00001790  afa20000	sw	0(r29),r2
  729  00001794  8fc10000	lw	r1,(r30)
  730  00001798  afc1fff4	sw	-12(r30),r1
  731  0000179c          	L21_LF2:
  732  0000179c  8fc10000	lw	r1,(r30)
  733  000017a0  90220000	lbu	r2,(r1)
  734  000017a4  64410000	snei	r1,r2,#0
  735  000017a8  1420000c	bnez	r1,L23_LF2
  736  000017ac  54000000	nop; delay slot nop
  737  000017b0  0800001c	j	L22_LF2
  738  000017b4  54000000	nop; delay slot nop
  739  000017b8          	L23_LF2:
  740  000017b8  8fc20000	lw	r2,(r30)
  741  000017bc  20410001	addi	r1,r2,#1
  742  000017c0  00011020	add	r2,r0,r1
  743  000017c4  afc20000	sw	(r30),r2
  744  000017c8  0bffffd0	j	L21_LF2
  745  000017cc  54000000	nop; delay slot nop
  746  000017d0          	L22_LF2:
  747  000017d0  23bdfff8	addi	r29,r29,#-8
  748  000017d4  001d0820	add	r1,r0,r29
  749  000017d8  8fc20000	lw	r2,(r30)
  750  000017dc  ac220000	sw	(r1),r2
  751  000017e0  8fc20004	lw	r2,4(r30)
  752  000017e4  ac220004	sw	4(r1),r2
  753  000017e8  0ffffe5c	jal	_dstrcpy
  754  000017ec  54000000	nop; delay slot nop
  755  000017f0  23bd0008	addi	r29,r29,#8
  756  000017f4  8fc1fff4	lw	r1,-12(r30)
  757  000017f8  08000004	j	L20_LF2
  758  000017fc  54000000	nop; delay slot nop
  759  00001800          	L20_LF2:
  760  00001800  8fa20000	lw	r2,0(r29)
  761  00001804  8fdffff8	lw	r31,-8(r30)
  762  00001808  001ee820	add	r29,r0,r30
  763  0000180c  8fdefffc	lw	r30,-4(r30)
  764  00001810  4be00000	jr	r31
  765  00001814  54000000	nop
  766  00001818          	.endproc _dstrcat
  767  00001818          	.align 2
  768  00001818          	.proc _dstrncmp
  769  00001818          	.global _dstrncmp
  770  00001818          	_dstrncmp:
  771                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  772  00001818  afbefffc	sw	-4(r29),r30; push fp
  773  0000181c  001df020	add	r30,r0,r29; fp = sp
  774  00001820  afbffff8	sw	-8(r29),r31; push ret addr
  775  00001824  2fbd0018	subui	r29,r29,#24; alloc local storage
  776  00001828  afa20000	sw	0(r29),r2
  777  0000182c  afa30004	sw	4(r29),r3
  778  00001830  54000000	nop
  779  00001834  20010000	addi	r1,r0,#0
  780  00001838  afc1fff4	sw	-12(r30),r1
  781  0000183c          	L25_LF2:
  782  0000183c  8fc1fff4	lw	r1,-12(r30)
  783  00001840  8fc20008	lw	r2,8(r30)
  784  00001844  0022082a	slt	r1,r1,r2
  785  00001848  1420000c	bnez	r1,L28_LF2
  786  0000184c  54000000	nop; delay slot nop
  787  00001850  08000088	j	L26_LF2
  788  00001854  54000000	nop; delay slot nop
  789  00001858          	L28_LF2:
  790  00001858  8fc10004	lw	r1,4(r30)
  791  0000185c  90220000	lbu	r2,(r1)
  792  00001860  64410000	snei	r1,r2,#0
  793  00001864  14200018	bnez	r1,L29_LF2
  794  00001868  54000000	nop; delay slot nop
  795  0000186c  20010000	addi	r1,r0,#0
  796  00001870  080000d8	j	L24_LF2
  797  00001874  54000000	nop; delay slot nop
  798  00001878  08000028	j	L30_LF2
  799  0000187c  54000000	nop; delay slot nop
  800  00001880          	L29_LF2:
  801  00001880  8fc10000	lw	r1,(r30)
  802  00001884  8fc20004	lw	r2,4(r30)
  803  00001888  90210000	lbu	r1,(r1)
  804  0000188c  90420000	lbu	r2,(r2)
  805  00001890  00220829	sne	r1,r1,r2
  806  00001894  1020000c	beqz	r1,L30_LF2
  807  00001898  54000000	nop; delay slot nop
  808  0000189c  0800003c	j	L26_LF2
  809  000018a0  54000000	nop; delay slot nop
  810  000018a4          	L31_LF2:
  811  000018a4          	L30_LF2:
  812  000018a4  8fc20000	lw	r2,(r30)
  813  000018a8  20410001	addi	r1,r2,#1
  814  000018ac  00011020	add	r2,r0,r1
  815  000018b0  afc20000	sw	(r30),r2
  816  000018b4  8fc20004	lw	r2,4(r30)
  817  000018b8  20410001	addi	r1,r2,#1
  818  000018bc  00011020	add	r2,r0,r1
  819  000018c0  afc20004	sw	4(r30),r2
  820  000018c4          	L27_LF2:
  821  000018c4  8fc2fff4	lw	r2,-12(r30)
  822  000018c8  20410001	addi	r1,r2,#1
  823  000018cc  00011020	add	r2,r0,r1
  824  000018d0  afc2fff4	sw	-12(r30),r2
  825  000018d4  0bffff64	j	L25_LF2
  826  000018d8  54000000	nop; delay slot nop
  827  000018dc          	L26_LF2:
  828  000018dc  8fc1fff4	lw	r1,-12(r30)
  829  000018e0  8fc20008	lw	r2,8(r30)
  830  000018e4  00220828	seq	r1,r1,r2
  831  000018e8  10200018	beqz	r1,L32_LF2
  832  000018ec  54000000	nop; delay slot nop
  833  000018f0  20010000	addi	r1,r0,#0
  834  000018f4  08000054	j	L24_LF2
  835  000018f8  54000000	nop; delay slot nop
  836  000018fc  0800004c	j	L33_LF2
  837  00001900  54000000	nop; delay slot nop
  838  00001904          	L32_LF2:
  839  00001904  8fc20000	lw	r2,(r30)
  840  00001908  90410000	lbu	r1,(r2)
  841  0000190c  8fc20004	lw	r2,4(r30)
  842  00001910  90430000	lbu	r3,(r2)
  843  00001914  00230822	sub	r1,r1,r3
  844  00001918  74220000	sgei	r2,r1,#0
  845  0000191c  10400020	beqz	r2,L34_LF2
  846  00001920  54000000	nop; delay slot nop
  847  00001924  8fc10000	lw	r1,(r30)
  848  00001928  8fc20004	lw	r2,4(r30)
  849  0000192c  90210000	lbu	r1,(r1)
  850  00001930  90420000	lbu	r2,(r2)
  851  00001934  00220829	sne	r1,r1,r2
  852  00001938  08000008	j	L35_LF2
  853  0000193c  54000000	nop; delay slot nop
  854  00001940          	L34_LF2:
  855  00001940  2001ffff	addi	r1,r0,#-1
  856  00001944          	L35_LF2:
  857  00001944  08000004	j	L24_LF2
  858  00001948  54000000	nop; delay slot nop
  859  0000194c          	L33_LF2:
  860  0000194c          	L24_LF2:
  861  0000194c  8fa20000	lw	r2,0(r29)
  862  00001950  8fa30004	lw	r3,4(r29)
  863  00001954  8fdffff8	lw	r31,-8(r30)
  864  00001958  001ee820	add	r29,r0,r30
  865  0000195c  8fdefffc	lw	r30,-4(r30)
  866  00001960  4be00000	jr	r31
  867  00001964  54000000	nop
  868  00001968          	.endproc _dstrncmp
  869  00001968          	.align 2
  870  00001968          	.proc _dstrlen
  871  00001968          	.global _dstrlen
  872  00001968          	_dstrlen:
  873                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  874  00001968  afbefffc	sw	-4(r29),r30; push fp
  875  0000196c  001df020	add	r30,r0,r29; fp = sp
  876  00001970  afbffff8	sw	-8(r29),r31; push ret addr
  877  00001974  2fbd0018	subui	r29,r29,#24; alloc local storage
  878  00001978  afa20000	sw	0(r29),r2
  879  0000197c  20010000	addi	r1,r0,#0
  880  00001980  afc1fff4	sw	-12(r30),r1
  881  00001984          	L37_LF2:
  882  00001984  8fc10000	lw	r1,(r30)
  883  00001988  20220001	addi	r2,r1,#1
  884  0000198c  afc20000	sw	(r30),r2
  885  00001990  90210000	lbu	r1,(r1)
  886  00001994  64220000	snei	r2,r1,#0
  887  00001998  1440000c	bnez	r2,L39_LF2
  888  0000199c  54000000	nop; delay slot nop
  889  000019a0  0800001c	j	L38_LF2
  890  000019a4  54000000	nop; delay slot nop
  891  000019a8          	L39_LF2:
  892  000019a8  8fc2fff4	lw	r2,-12(r30)
  893  000019ac  20410001	addi	r1,r2,#1
  894  000019b0  00011020	add	r2,r0,r1
  895  000019b4  afc2fff4	sw	-12(r30),r2
  896  000019b8  0bffffc8	j	L37_LF2
  897  000019bc  54000000	nop; delay slot nop
  898  000019c0          	L38_LF2:
  899  000019c0  8fc1fff4	lw	r1,-12(r30)
  900  000019c4  08000004	j	L36_LF2
  901  000019c8  54000000	nop; delay slot nop
  902  000019cc          	L36_LF2:
  903  000019cc  8fa20000	lw	r2,0(r29)
  904  000019d0  8fdffff8	lw	r31,-8(r30)
  905  000019d4  001ee820	add	r29,r0,r30
  906  000019d8  8fdefffc	lw	r30,-4(r30)
  907  000019dc  4be00000	jr	r31
  908  000019e0  54000000	nop
  909  000019e4          	.endproc _dstrlen
  910  000019e4          	.align 2
  911  000019e4          	.proc _dstrstr
  912  000019e4          	.global _dstrstr
  913  000019e4          	_dstrstr:
  914                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  915  000019e4  afbefffc	sw	-4(r29),r30; push fp
  916  000019e8  001df020	add	r30,r0,r29; fp = sp
  917  000019ec  afbffff8	sw	-8(r29),r31; push ret addr
  918  000019f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  919  000019f4  afa20000	sw	0(r29),r2
  920  000019f8  23bdfff8	addi	r29,r29,#-8
  921  000019fc  001d0820	add	r1,r0,r29
  922  00001a00  8fc20004	lw	r2,4(r30)
  923  00001a04  ac220000	sw	(r1),r2
  924  00001a08  0fffff5c	jal	_dstrlen
  925  00001a0c  54000000	nop; delay slot nop
  926  00001a10  23bd0008	addi	r29,r29,#8
  927  00001a14  afc1fff4	sw	-12(r30),r1
  928  00001a18          	L41_LF2:
  929  00001a18  8fc10000	lw	r1,(r30)
  930  00001a1c  90220000	lbu	r2,(r1)
  931  00001a20  64410000	snei	r1,r2,#0
  932  00001a24  1420000c	bnez	r1,L43_LF2
  933  00001a28  54000000	nop; delay slot nop
  934  00001a2c  08000060	j	L42_LF2
  935  00001a30  54000000	nop; delay slot nop
  936  00001a34          	L43_LF2:
  937  00001a34  23bdfff0	addi	r29,r29,#-16
  938  00001a38  001d0820	add	r1,r0,r29
  939  00001a3c  8fc20000	lw	r2,(r30)
  940  00001a40  ac220000	sw	(r1),r2
  941  00001a44  8fc20004	lw	r2,4(r30)
  942  00001a48  ac220004	sw	4(r1),r2
  943  00001a4c  8fc2fff4	lw	r2,-12(r30)
  944  00001a50  ac220008	sw	8(r1),r2
  945  00001a54  0ffffdc0	jal	_dstrncmp
  946  00001a58  54000000	nop; delay slot nop
  947  00001a5c  23bd0010	addi	r29,r29,#16
  948  00001a60  64220000	snei	r2,r1,#0
  949  00001a64  14400010	bnez	r2,L44_LF2
  950  00001a68  54000000	nop; delay slot nop
  951  00001a6c  8fc10000	lw	r1,(r30)
  952  00001a70  08000028	j	L40_LF2
  953  00001a74  54000000	nop; delay slot nop
  954  00001a78          	L44_LF2:
  955  00001a78  8fc20000	lw	r2,(r30)
  956  00001a7c  20410001	addi	r1,r2,#1
  957  00001a80  00011020	add	r2,r0,r1
  958  00001a84  afc20000	sw	(r30),r2
  959  00001a88  0bffff8c	j	L41_LF2
  960  00001a8c  54000000	nop; delay slot nop
  961  00001a90          	L42_LF2:
  962  00001a90  20010000	addi	r1,r0,#0
  963  00001a94  08000004	j	L40_LF2
  964  00001a98  54000000	nop; delay slot nop
  965  00001a9c          	L40_LF2:
  966  00001a9c  8fa20000	lw	r2,0(r29)
  967  00001aa0  8fdffff8	lw	r31,-8(r30)
  968  00001aa4  001ee820	add	r29,r0,r30
  969  00001aa8  8fdefffc	lw	r30,-4(r30)
  970  00001aac  4be00000	jr	r31
  971  00001ab0  54000000	nop
  972  00001ab4          	.endproc _dstrstr
  973  00001ab4          	.align 2
  974  00001ab4          	.proc _dmindex
  975  00001ab4          	.global _dmindex
  976  00001ab4          	_dmindex:
  977                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  978  00001ab4  afbefffc	sw	-4(r29),r30; push fp
  979  00001ab8  001df020	add	r30,r0,r29; fp = sp
  980  00001abc  afbffff8	sw	-8(r29),r31; push ret addr
  981  00001ac0  2fbd0018	subui	r29,r29,#24; alloc local storage
  982  00001ac4  afa20000	sw	0(r29),r2
  983  00001ac8  54000000	nop
  984  00001acc          	L46_LF2:
  985  00001acc  8fc10000	lw	r1,(r30)
  986  00001ad0  90220000	lbu	r2,(r1)
  987  00001ad4  64410000	snei	r1,r2,#0
  988  00001ad8  1420000c	bnez	r1,L48_LF2
  989  00001adc  54000000	nop; delay slot nop
  990  00001ae0  08000070	j	L47_LF2
  991  00001ae4  54000000	nop; delay slot nop
  992  00001ae8          	L48_LF2:
  993  00001ae8  8fc10004	lw	r1,4(r30)
  994  00001aec  afc1fff4	sw	-12(r30),r1
  995  00001af0          	L49_LF2:
  996  00001af0  8fc1fff4	lw	r1,-12(r30)
  997  00001af4  90220000	lbu	r2,(r1)
  998  00001af8  64410000	snei	r1,r2,#0
  999  00001afc  1420000c	bnez	r1,L52_LF2
 1000  00001b00  54000000	nop; delay slot nop
 1001  00001b04  08000044	j	L50_LF2
 1002  00001b08  54000000	nop; delay slot nop
 1003  00001b0c          	L52_LF2:
 1004  00001b0c  8fc10000	lw	r1,(r30)
 1005  00001b10  8fc2fff4	lw	r2,-12(r30)
 1006  00001b14  90210000	lbu	r1,(r1)
 1007  00001b18  90420000	lbu	r2,(r2)
 1008  00001b1c  00220828	seq	r1,r1,r2
 1009  00001b20  10200010	beqz	r1,L51_LF2
 1010  00001b24  54000000	nop; delay slot nop
 1011  00001b28  8fc10000	lw	r1,(r30)
 1012  00001b2c  08000030	j	L45_LF2
 1013  00001b30  54000000	nop; delay slot nop
 1014  00001b34          	L53_LF2:
 1015  00001b34          	L51_LF2:
 1016  00001b34  8fc2fff4	lw	r2,-12(r30)
 1017  00001b38  20410001	addi	r1,r2,#1
 1018  00001b3c  00011020	add	r2,r0,r1
 1019  00001b40  afc2fff4	sw	-12(r30),r2
 1020  00001b44  0bffffa8	j	L49_LF2
 1021  00001b48  54000000	nop; delay slot nop
 1022  00001b4c          	L50_LF2:
 1023  00001b4c  0bffff7c	j	L46_LF2
 1024  00001b50  54000000	nop; delay slot nop
 1025  00001b54          	L47_LF2:
 1026  00001b54  20010000	addi	r1,r0,#0
 1027  00001b58  08000004	j	L45_LF2
 1028  00001b5c  54000000	nop; delay slot nop
 1029  00001b60          	L45_LF2:
 1030  00001b60  8fa20000	lw	r2,0(r29)
 1031  00001b64  8fdffff8	lw	r31,-8(r30)
 1032  00001b68  001ee820	add	r29,r0,r30
 1033  00001b6c  8fdefffc	lw	r30,-4(r30)
 1034  00001b70  4be00000	jr	r31
 1035  00001b74  54000000	nop
 1036  00001b78          	.endproc _dmindex
 1037  00001b78          	.align 2
 1038  00001b78          	.proc _dindex
 1039  00001b78          	.global _dindex
 1040  00001b78          	_dindex:
 1041                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1042  00001b78  afbefffc	sw	-4(r29),r30; push fp
 1043  00001b7c  001df020	add	r30,r0,r29; fp = sp
 1044  00001b80  afbffff8	sw	-8(r29),r31; push ret addr
 1045  00001b84  2fbd0010	subui	r29,r29,#16; alloc local storage
 1046  00001b88  afa20000	sw	0(r29),r2
 1047  00001b8c  54000000	nop
 1048  00001b90          	L55_LF2:
 1049  00001b90  8fc10000	lw	r1,(r30)
 1050  00001b94  90220000	lbu	r2,(r1)
 1051  00001b98  64410000	snei	r1,r2,#0
 1052  00001b9c  1420000c	bnez	r1,L57_LF2
 1053  00001ba0  54000000	nop; delay slot nop
 1054  00001ba4  08000040	j	L56_LF2
 1055  00001ba8  54000000	nop; delay slot nop
 1056  00001bac          	L57_LF2:
 1057  00001bac  8fc10000	lw	r1,(r30)
 1058  00001bb0  90220000	lbu	r2,(r1)
 1059  00001bb4  8fc10004	lw	r1,4(r30)
 1060  00001bb8  00411028	seq	r2,r2,r1
 1061  00001bbc  10400010	beqz	r2,L58_LF2
 1062  00001bc0  54000000	nop; delay slot nop
 1063  00001bc4  8fc10000	lw	r1,(r30)
 1064  00001bc8  08000028	j	L54_LF2
 1065  00001bcc  54000000	nop; delay slot nop
 1066  00001bd0          	L58_LF2:
 1067  00001bd0  8fc20000	lw	r2,(r30)
 1068  00001bd4  20410001	addi	r1,r2,#1
 1069  00001bd8  00011020	add	r2,r0,r1
 1070  00001bdc  afc20000	sw	(r30),r2
 1071  00001be0  0bffffac	j	L55_LF2
 1072  00001be4  54000000	nop; delay slot nop
 1073  00001be8          	L56_LF2:
 1074  00001be8  20010000	addi	r1,r0,#0
 1075  00001bec  08000004	j	L54_LF2
 1076  00001bf0  54000000	nop; delay slot nop
 1077  00001bf4          	L54_LF2:
 1078  00001bf4  8fa20000	lw	r2,0(r29)
 1079  00001bf8  8fdffff8	lw	r31,-8(r30)
 1080  00001bfc  001ee820	add	r29,r0,r30
 1081  00001c00  8fdefffc	lw	r30,-4(r30)
 1082  00001c04  4be00000	jr	r31
 1083  00001c08  54000000	nop
 1084  00001c0c          	.endproc _dindex
 1085  00001c0c          	.align 2
 1086  00001c0c          	.proc _ditoa
 1087  00001c0c          	.global _ditoa
 1088  00001c0c          	_ditoa:
 1089                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1090  00001c0c  afbefffc	sw	-4(r29),r30; push fp
 1091  00001c10  001df020	add	r30,r0,r29; fp = sp
 1092  00001c14  afbffff8	sw	-8(r29),r31; push ret addr
 1093  00001c18  2fbd0018	subui	r29,r29,#24; alloc local storage
 1094  00001c1c  afa20000	sw	0(r29),r2
 1095  00001c20  afa30004	sw	4(r29),r3
 1096  00001c24  8fc10000	lw	r1,(r30)
 1097  00001c28  68220000	slti	r2,r1,#0
 1098  00001c2c  1040002c	beqz	r2,L60_LF2
 1099  00001c30  54000000	nop; delay slot nop
 1100  00001c34  8fc10004	lw	r1,4(r30)
 1101  00001c38  20220001	addi	r2,r1,#1
 1102  00001c3c  afc20004	sw	4(r30),r2
 1103  00001c40  2002002d	addi	r2,r0,(#0x2d)&0xff
 1104  00001c44  a0220000	sb	(r1),r2
 1105  00001c48  8fc10000	lw	r1,(r30)
 1106  00001c4c  00011022	sub	r2,r0,r1
 1107  00001c50  afc20000	sw	(r30),r2
 1108  00001c54  08000118	j	L61_LF2
 1109  00001c58  54000000	nop; delay slot nop
 1110  00001c5c          	L60_LF2:
 1111  00001c5c  8fc10000	lw	r1,(r30)
 1112  00001c60  64220000	snei	r2,r1,#0
 1113  00001c64  14400020	bnez	r2,L62_LF2
 1114  00001c68  54000000	nop; delay slot nop
 1115  00001c6c  8fc10004	lw	r1,4(r30)
 1116  00001c70  20220001	addi	r2,r1,#1
 1117  00001c74  afc20004	sw	4(r30),r2
 1118  00001c78  20020030	addi	r2,r0,(#0x30)&0xff
 1119  00001c7c  a0220000	sb	(r1),r2
 1120  00001c80  080000ec	j	L61_LF2
 1121  00001c84  54000000	nop; delay slot nop
 1122  00001c88          	L62_LF2:
 1123  00001c88  20010001	addi	r1,r0,#1
 1124  00001c8c  afc1fff4	sw	-12(r30),r1
 1125  00001c90          	L64_LF2:
 1126  00001c90  8fc1fff4	lw	r1,-12(r30)
 1127  00001c94  8fc20000	lw	r2,(r30)
 1128  00001c98  0022082c	sle	r1,r1,r2
 1129  00001c9c  1420000c	bnez	r1,L66_LF2
 1130  00001ca0  54000000	nop; delay slot nop
 1131  00001ca4  08000024	j	L65_LF2
 1132  00001ca8  54000000	nop; delay slot nop
 1133  00001cac          	L67_LF2:
 1134  00001cac          	L66_LF2:
 1135  00001cac  8fc1fff4	lw	r1,-12(r30)
 1136  00001cb0  00011820	add	r3,r0,r1
 1137  00001cb4  50620002	slli	r2,r3,#0x2
 1138  00001cb8  00411020	add	r2,r2,r1
 1139  00001cbc  50410001	slli	r1,r2,#0x1
 1140  00001cc0  afc1fff4	sw	-12(r30),r1
 1141  00001cc4  0bffffc8	j	L64_LF2
 1142  00001cc8  54000000	nop; delay slot nop
 1143  00001ccc          	L65_LF2:
 1144  00001ccc  54000000	nop
 1145  00001cd0          	L68_LF2:
 1146  00001cd0  8fc1fff4	lw	r1,-12(r30)
 1147  00001cd4  2002000a	addi	r2,r0,#10
 1148  00001cd8  00200035	movi2fp	f0,r1
 1149  00001cdc  00400835	movi2fp	f1,r2
 1150  00001ce0  0401000f	div	f0,f0,f1
 1151  00001ce4  00000834	movfp2i	r1,f0
 1152  00001ce8  afc1fff4	sw	-12(r30),r1
 1153  00001cec  8fc10004	lw	r1,4(r30)
 1154  00001cf0  20220001	addi	r2,r1,#1
 1155  00001cf4  afc20004	sw	4(r30),r2
 1156  00001cf8  8fc20000	lw	r2,(r30)
 1157  00001cfc  8fc3fff4	lw	r3,-12(r30)
 1158  00001d00  00400035	movi2fp	f0,r2
 1159  00001d04  00600835	movi2fp	f1,r3
 1160  00001d08  0401000f	div	f0,f0,f1
 1161  00001d0c  00001034	movfp2i	r2,f0
 1162  00001d10  00021820	add	r3,r0,r2
 1163  00001d14  20620030	addi	r2,r3,#48
 1164  00001d18  a0220000	sb	(r1),r2
 1165  00001d1c  8fc10000	lw	r1,(r30)
 1166  00001d20  8fc3fff4	lw	r3,-12(r30)
 1167  00001d24  00200035	movi2fp	f0,r1
 1168  00001d28  00600835	movi2fp	f1,r3
 1169  00001d2c  0401000f	div	f0,f0,f1
 1170  00001d30  00001034	movfp2i	r2,f0
 1171  00001d34  8fc3fff4	lw	r3,-12(r30)
 1172  00001d38  00400035	movi2fp	f0,r2
 1173  00001d3c  00600835	movi2fp	f1,r3
 1174  00001d40  0401000e	mult	f0,f0,f1
 1175  00001d44  00001034	movfp2i	r2,f0
 1176  00001d48  00220822	sub	r1,r1,r2
 1177  00001d4c  afc10000	sw	(r30),r1
 1178  00001d50          	L70_LF2:
 1179  00001d50  8fc1fff4	lw	r1,-12(r30)
 1180  00001d54  6c220001	sgti	r2,r1,#1
 1181  00001d58  1440000c	bnez	r2,L71_LF2
 1182  00001d5c  54000000	nop; delay slot nop
 1183  00001d60  0800000c	j	L61_LF2
 1184  00001d64  54000000	nop; delay slot nop
 1185  00001d68          	L71_LF2:
 1186  00001d68  0bffff64	j	L68_LF2
 1187  00001d6c  54000000	nop; delay slot nop
 1188  00001d70          	L69_LF2:
 1189  00001d70          	L63_LF2:
 1190  00001d70          	L61_LF2:
 1191  00001d70  8fc10004	lw	r1,4(r30)
 1192  00001d74  20020000	addi	r2,r0,(#0x0)&0xff
 1193  00001d78  a0220000	sb	(r1),r2
 1194  00001d7c          	L59_LF2:
 1195  00001d7c  8fa20000	lw	r2,0(r29)
 1196  00001d80  8fa30004	lw	r3,4(r29)
 1197  00001d84  8fdffff8	lw	r31,-8(r30)
 1198  00001d88  001ee820	add	r29,r0,r30
 1199  00001d8c  8fdefffc	lw	r30,-4(r30)
 1200  00001d90  4be00000	jr	r31
 1201  00001d94  54000000	nop
 1202  00001d98          	.endproc _ditoa
 1203  00001d98          	.align 2
 1204  00001d98          	.proc _dstrtol
 1205  00001d98          	.global _dstrtol
 1206  00001d98          	_dstrtol:
 1207                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1208  00001d98  afbefffc	sw	-4(r29),r30; push fp
 1209  00001d9c  001df020	add	r30,r0,r29; fp = sp
 1210  00001da0  afbffff8	sw	-8(r29),r31; push ret addr
 1211  00001da4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1212  00001da8  afa20000	sw	0(r29),r2
 1213  00001dac  20010000	addi	r1,r0,#0
 1214  00001db0  afc1fff4	sw	-12(r30),r1
 1215  00001db4          	L73_LF2:
 1216  00001db4  8fc10000	lw	r1,(r30)
 1217  00001db8  90220000	lbu	r2,(r1)
 1218  00001dbc  60410020	seqi	r1,r2,#32
 1219  00001dc0  14200034	bnez	r1,L75_LF2
 1220  00001dc4  54000000	nop; delay slot nop
 1221  00001dc8  8fc10000	lw	r1,(r30)
 1222  00001dcc  90220000	lbu	r2,(r1)
 1223  00001dd0  60410009	seqi	r1,r2,#9
 1224  00001dd4  14200020	bnez	r1,L75_LF2
 1225  00001dd8  54000000	nop; delay slot nop
 1226  00001ddc  8fc10000	lw	r1,(r30)
 1227  00001de0  90220000	lbu	r2,(r1)
 1228  00001de4  6041000a	seqi	r1,r2,#10
 1229  00001de8  1420000c	bnez	r1,L75_LF2
 1230  00001dec  54000000	nop; delay slot nop
 1231  00001df0  0800001c	j	L74_LF2
 1232  00001df4  54000000	nop; delay slot nop
 1233  00001df8          	L75_LF2:
 1234  00001df8  8fc20000	lw	r2,(r30)
 1235  00001dfc  20410001	addi	r1,r2,#1
 1236  00001e00  00011020	add	r2,r0,r1
 1237  00001e04  afc20000	sw	(r30),r2
 1238  00001e08  0bffffa8	j	L73_LF2
 1239  00001e0c  54000000	nop; delay slot nop
 1240  00001e10          	L74_LF2:
 1241  00001e10  8fc10004	lw	r1,4(r30)
 1242  00001e14  64220000	snei	r2,r1,#0
 1243  00001e18  10400010	beqz	r2,L76_LF2
 1244  00001e1c  54000000	nop; delay slot nop
 1245  00001e20  8fc10004	lw	r1,4(r30)
 1246  00001e24  8fc20000	lw	r2,(r30)
 1247  00001e28  ac220000	sw	(r1),r2
 1248  00001e2c          	L76_LF2:
 1249  00001e2c  8fc10000	lw	r1,(r30)
 1250  00001e30  90220000	lbu	r2,(r1)
 1251  00001e34  64410000	snei	r1,r2,#0
 1252  00001e38  14200010	bnez	r1,L77_LF2
 1253  00001e3c  54000000	nop; delay slot nop
 1254  00001e40  8fc1fff4	lw	r1,-12(r30)
 1255  00001e44  08000294	j	L72_LF2
 1256  00001e48  54000000	nop; delay slot nop
 1257  00001e4c          	L77_LF2:
 1258  00001e4c  8fc10000	lw	r1,(r30)
 1259  00001e50  90220000	lbu	r2,(r1)
 1260  00001e54  6041002d	seqi	r1,r2,#45
 1261  00001e58  10200024	beqz	r1,L78_LF2
 1262  00001e5c  54000000	nop; delay slot nop
 1263  00001e60  2001ffff	addi	r1,r0,#-1
 1264  00001e64  afc1ffec	sw	-20(r30),r1
 1265  00001e68  8fc20000	lw	r2,(r30)
 1266  00001e6c  20410001	addi	r1,r2,#1
 1267  00001e70  00011020	add	r2,r0,r1
 1268  00001e74  afc20000	sw	(r30),r2
 1269  00001e78  0800000c	j	L79_LF2
 1270  00001e7c  54000000	nop; delay slot nop
 1271  00001e80          	L78_LF2:
 1272  00001e80  20010001	addi	r1,r0,#1
 1273  00001e84  afc1ffec	sw	-20(r30),r1
 1274  00001e88          	L79_LF2:
 1275  00001e88  8fc10008	lw	r1,8(r30)
 1276  00001e8c  64220000	snei	r2,r1,#0
 1277  00001e90  14400090	bnez	r2,L80_LF2
 1278  00001e94  54000000	nop; delay slot nop
 1279  00001e98  8fc10000	lw	r1,(r30)
 1280  00001e9c  90220000	lbu	r2,(r1)
 1281  00001ea0  60410030	seqi	r1,r2,#48
 1282  00001ea4  10200074	beqz	r1,L81_LF2
 1283  00001ea8  54000000	nop; delay slot nop
 1284  00001eac  8fc20000	lw	r2,(r30)
 1285  00001eb0  20410001	addi	r1,r2,#1
 1286  00001eb4  00011020	add	r2,r0,r1
 1287  00001eb8  afc20000	sw	(r30),r2
 1288  00001ebc  8fc10000	lw	r1,(r30)
 1289  00001ec0  90220000	lbu	r2,(r1)
 1290  00001ec4  60410078	seqi	r1,r2,#120
 1291  00001ec8  14200020	bnez	r1,L83_LF2
 1292  00001ecc  54000000	nop; delay slot nop
 1293  00001ed0  8fc10000	lw	r1,(r30)
 1294  00001ed4  90220000	lbu	r2,(r1)
 1295  00001ed8  60410058	seqi	r1,r2,#88
 1296  00001edc  1420000c	bnez	r1,L83_LF2
 1297  00001ee0  54000000	nop; delay slot nop
 1298  00001ee4  08000024	j	L82_LF2
 1299  00001ee8  54000000	nop; delay slot nop
 1300  00001eec          	L83_LF2:
 1301  00001eec  20010010	addi	r1,r0,#16
 1302  00001ef0  afc10008	sw	8(r30),r1
 1303  00001ef4  8fc20000	lw	r2,(r30)
 1304  00001ef8  20410001	addi	r1,r2,#1
 1305  00001efc  00011020	add	r2,r0,r1
 1306  00001f00  afc20000	sw	(r30),r2
 1307  00001f04  0800000c	j	L84_LF2
 1308  00001f08  54000000	nop; delay slot nop
 1309  00001f0c          	L82_LF2:
 1310  00001f0c  20010008	addi	r1,r0,#8
 1311  00001f10  afc10008	sw	8(r30),r1
 1312  00001f14          	L84_LF2:
 1313  00001f14  0800000c	j	L80_LF2
 1314  00001f18  54000000	nop; delay slot nop
 1315  00001f1c          	L81_LF2:
 1316  00001f1c  2001000a	addi	r1,r0,#10
 1317  00001f20  afc10008	sw	8(r30),r1
 1318  00001f24          	L85_LF2:
 1319  00001f24          	L80_LF2:
 1320  00001f24  8fc10008	lw	r1,8(r30)
 1321  00001f28  70220000	slei	r2,r1,#0
 1322  00001f2c  1440001c	bnez	r2,L87_LF2
 1323  00001f30  54000000	nop; delay slot nop
 1324  00001f34  8fc10008	lw	r1,8(r30)
 1325  00001f38  6c220010	sgti	r2,r1,#16
 1326  00001f3c  1440000c	bnez	r2,L87_LF2
 1327  00001f40  54000000	nop; delay slot nop
 1328  00001f44  08000010	j	L86_LF2
 1329  00001f48  54000000	nop; delay slot nop
 1330  00001f4c          	L87_LF2:
 1331  00001f4c  8fc1fff4	lw	r1,-12(r30)
 1332  00001f50  08000188	j	L72_LF2
 1333  00001f54  54000000	nop; delay slot nop
 1334  00001f58          	L86_LF2:
 1335  00001f58  54000000	nop
 1336  00001f5c          	L88_LF2:
 1337  00001f5c  8fc10000	lw	r1,(r30)
 1338  00001f60  90220000	lbu	r2,(r1)
 1339  00001f64  6c41002f	sgtui	r1,r2,#47
 1340  00001f68  10200030	beqz	r1,L91_LF2
 1341  00001f6c  54000000	nop; delay slot nop
 1342  00001f70  8fc10000	lw	r1,(r30)
 1343  00001f74  90220000	lbu	r2,(r1)
 1344  00001f78  70410039	sleui	r1,r2,#57
 1345  00001f7c  1020001c	beqz	r1,L91_LF2
 1346  00001f80  54000000	nop; delay slot nop
 1347  00001f84  8fc10000	lw	r1,(r30)
 1348  00001f88  90220000	lbu	r2,(r1)
 1349  00001f8c  2041ffd0	addi	r1,r2,#-48
 1350  00001f90  afc1fff0	sw	-16(r30),r1
 1351  00001f94  0800008c	j	L92_LF2
 1352  00001f98  54000000	nop; delay slot nop
 1353  00001f9c          	L91_LF2:
 1354  00001f9c  8fc10000	lw	r1,(r30)
 1355  00001fa0  90220000	lbu	r2,(r1)
 1356  00001fa4  6c410060	sgtui	r1,r2,#96
 1357  00001fa8  10200030	beqz	r1,L93_LF2
 1358  00001fac  54000000	nop; delay slot nop
 1359  00001fb0  8fc10000	lw	r1,(r30)
 1360  00001fb4  90220000	lbu	r2,(r1)
 1361  00001fb8  7041007a	sleui	r1,r2,#122
 1362  00001fbc  1020001c	beqz	r1,L93_LF2
 1363  00001fc0  54000000	nop; delay slot nop
 1364  00001fc4  8fc10000	lw	r1,(r30)
 1365  00001fc8  90220000	lbu	r2,(r1)
 1366  00001fcc  2041ffa9	addi	r1,r2,#-87
 1367  00001fd0  afc1fff0	sw	-16(r30),r1
 1368  00001fd4  0800004c	j	L92_LF2
 1369  00001fd8  54000000	nop; delay slot nop
 1370  00001fdc          	L93_LF2:
 1371  00001fdc  8fc10000	lw	r1,(r30)
 1372  00001fe0  90220000	lbu	r2,(r1)
 1373  00001fe4  6c410040	sgtui	r1,r2,#64
 1374  00001fe8  10200030	beqz	r1,L95_LF2
 1375  00001fec  54000000	nop; delay slot nop
 1376  00001ff0  8fc10000	lw	r1,(r30)
 1377  00001ff4  90220000	lbu	r2,(r1)
 1378  00001ff8  7041005a	sleui	r1,r2,#90
 1379  00001ffc  1020001c	beqz	r1,L95_LF2
 1380  00002000  54000000	nop; delay slot nop
 1381  00002004  8fc10000	lw	r1,(r30)
 1382  00002008  90220000	lbu	r2,(r1)
 1383  0000200c  2041ffc9	addi	r1,r2,#-55
 1384  00002010  afc1fff0	sw	-16(r30),r1
 1385  00002014  0800000c	j	L92_LF2
 1386  00002018  54000000	nop; delay slot nop
 1387  0000201c          	L95_LF2:
 1388  0000201c  200103e8	addi	r1,r0,#1000
 1389  00002020  afc1fff0	sw	-16(r30),r1
 1390  00002024          	L96_LF2:
 1391  00002024          	L94_LF2:
 1392  00002024          	L92_LF2:
 1393  00002024  8fc1fff0	lw	r1,-16(r30)
 1394  00002028  8fc20008	lw	r2,8(r30)
 1395  0000202c  0022082a	slt	r1,r1,r2
 1396  00002030  10200040	beqz	r1,L90_LF2
 1397  00002034  54000000	nop; delay slot nop
 1398  00002038  8fc1fff4	lw	r1,-12(r30)
 1399  0000203c  8fc20008	lw	r2,8(r30)
 1400  00002040  00200035	movi2fp	f0,r1
 1401  00002044  00400835	movi2fp	f1,r2
 1402  00002048  0401000e	mult	f0,f0,f1
 1403  0000204c  00000834	movfp2i	r1,f0
 1404  00002050  afc1fff4	sw	-12(r30),r1
 1405  00002054  8fc1fff4	lw	r1,-12(r30)
 1406  00002058  8fc2fff0	lw	r2,-16(r30)
 1407  0000205c  00220820	add	r1,r1,r2
 1408  00002060  afc1fff4	sw	-12(r30),r1
 1409  00002064  8fc20000	lw	r2,(r30)
 1410  00002068  20410001	addi	r1,r2,#1
 1411  0000206c  00011020	add	r2,r0,r1
 1412  00002070  afc20000	sw	(r30),r2
 1413  00002074          	L97_LF2:
 1414  00002074          	L90_LF2:
 1415  00002074  8fc1fff0	lw	r1,-16(r30)
 1416  00002078  8fc20008	lw	r2,8(r30)
 1417  0000207c  0022082a	slt	r1,r1,r2
 1418  00002080  1420000c	bnez	r1,L98_LF2
 1419  00002084  54000000	nop; delay slot nop
 1420  00002088  0800000c	j	L89_LF2
 1421  0000208c  54000000	nop; delay slot nop
 1422  00002090          	L98_LF2:
 1423  00002090  0bfffec8	j	L88_LF2
 1424  00002094  54000000	nop; delay slot nop
 1425  00002098          	L89_LF2:
 1426  00002098  8fc10004	lw	r1,4(r30)
 1427  0000209c  64220000	snei	r2,r1,#0
 1428  000020a0  10400010	beqz	r2,L99_LF2
 1429  000020a4  54000000	nop; delay slot nop
 1430  000020a8  8fc10004	lw	r1,4(r30)
 1431  000020ac  8fc20000	lw	r2,(r30)
 1432  000020b0  ac220000	sw	(r1),r2
 1433  000020b4          	L99_LF2:
 1434  000020b4  8fc1fff4	lw	r1,-12(r30)
 1435  000020b8  8fc2ffec	lw	r2,-20(r30)
 1436  000020bc  00200035	movi2fp	f0,r1
 1437  000020c0  00400835	movi2fp	f1,r2
 1438  000020c4  0401000e	mult	f0,f0,f1
 1439  000020c8  00000834	movfp2i	r1,f0
 1440  000020cc  afc1fff4	sw	-12(r30),r1
 1441  000020d0  8fc1fff4	lw	r1,-12(r30)
 1442  000020d4  08000004	j	L72_LF2
 1443  000020d8  54000000	nop; delay slot nop
 1444  000020dc          	L72_LF2:
 1445  000020dc  8fa20000	lw	r2,0(r29)
 1446  000020e0  8fdffff8	lw	r31,-8(r30)
 1447  000020e4  001ee820	add	r29,r0,r30
 1448  000020e8  8fdefffc	lw	r30,-4(r30)
 1449  000020ec  4be00000	jr	r31
 1450  000020f0  54000000	nop
 1451  000020f4          	.endproc _dstrtol
 1452  000020f4          	.align 2
 1453  000020f4          	.proc _bcopy
 1454  000020f4          	.global _bcopy
 1455  000020f4          	_bcopy:
 1456                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1457  000020f4  afbefffc	sw	-4(r29),r30; push fp
 1458  000020f8  001df020	add	r30,r0,r29; fp = sp
 1459  000020fc  afbffff8	sw	-8(r29),r31; push ret addr
 1460  00002100  2fbd0010	subui	r29,r29,#16; alloc local storage
 1461  00002104  afa20000	sw	0(r29),r2
 1462  00002108  afa30004	sw	4(r29),r3
 1463  0000210c  54000000	nop
 1464  00002110          	L101_LF2:
 1465  00002110  8fc10008	lw	r1,8(r30)
 1466  00002114  2022ffff	addi	r2,r1,#-1
 1467  00002118  afc20008	sw	8(r30),r2
 1468  0000211c  6c210000	sgti	r1,r1,#0
 1469  00002120  1420000c	bnez	r1,L103_LF2
 1470  00002124  54000000	nop; delay slot nop
 1471  00002128  0800002c	j	L102_LF2
 1472  0000212c  54000000	nop; delay slot nop
 1473  00002130          	L103_LF2:
 1474  00002130  8fc10004	lw	r1,4(r30)
 1475  00002134  20220001	addi	r2,r1,#1
 1476  00002138  afc20004	sw	4(r30),r2
 1477  0000213c  8fc20000	lw	r2,(r30)
 1478  00002140  20430001	addi	r3,r2,#1
 1479  00002144  afc30000	sw	(r30),r3
 1480  00002148  80420000	lb	r2,(r2)
 1481  0000214c  a0220000	sb	(r1),r2
 1482  00002150  0bffffbc	j	L101_LF2
 1483  00002154  54000000	nop; delay slot nop
 1484  00002158          	L102_LF2:
 1485  00002158          	L100_LF2:
 1486  00002158  8fa20000	lw	r2,0(r29)
 1487  0000215c  8fa30004	lw	r3,4(r29)
 1488  00002160  8fdffff8	lw	r31,-8(r30)
 1489  00002164  001ee820	add	r29,r0,r30
 1490  00002168  8fdefffc	lw	r30,-4(r30)
 1491  0000216c  4be00000	jr	r31
 1492  00002170  54000000	nop
 1493  00002174          	.endproc _bcopy
 1494  00002174          	.align 2
 1495  00002174          	.proc _bzero
 1496  00002174          	.global _bzero
 1497  00002174          	_bzero:
 1498                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1499  00002174  afbefffc	sw	-4(r29),r30; push fp
 1500  00002178  001df020	add	r30,r0,r29; fp = sp
 1501  0000217c  afbffff8	sw	-8(r29),r31; push ret addr
 1502  00002180  2fbd0010	subui	r29,r29,#16; alloc local storage
 1503  00002184  afa20000	sw	0(r29),r2
 1504  00002188  54000000	nop
 1505  0000218c          	L105_LF2:
 1506  0000218c  8fc10004	lw	r1,4(r30)
 1507  00002190  2022ffff	addi	r2,r1,#-1
 1508  00002194  afc20004	sw	4(r30),r2
 1509  00002198  6c210000	sgti	r1,r1,#0
 1510  0000219c  1420000c	bnez	r1,L107_LF2
 1511  000021a0  54000000	nop; delay slot nop
 1512  000021a4  08000020	j	L106_LF2
 1513  000021a8  54000000	nop; delay slot nop
 1514  000021ac          	L107_LF2:
 1515  000021ac  8fc10000	lw	r1,(r30)
 1516  000021b0  20220001	addi	r2,r1,#1
 1517  000021b4  afc20000	sw	(r30),r2
 1518  000021b8  20020000	addi	r2,r0,(#0x0)&0xff
 1519  000021bc  a0220000	sb	(r1),r2
 1520  000021c0  0bffffc8	j	L105_LF2
 1521  000021c4  54000000	nop; delay slot nop
 1522  000021c8          	L106_LF2:
 1523  000021c8          	L104_LF2:
 1524  000021c8  8fa20000	lw	r2,0(r29)
 1525  000021cc  8fdffff8	lw	r31,-8(r30)
 1526  000021d0  001ee820	add	r29,r0,r30
 1527  000021d4  8fdefffc	lw	r30,-4(r30)
 1528  000021d8  4be00000	jr	r31
 1529  000021dc  54000000	nop
 1530  000021e0          	.endproc _bzero
 1531  000021e0          	.align 2
 1532  000021e0          	.proc _min
 1533  000021e0          	.global _min
 1534  000021e0          	_min:
 1535                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1536  000021e0  afbefffc	sw	-4(r29),r30; push fp
 1537  000021e4  001df020	add	r30,r0,r29; fp = sp
 1538  000021e8  afbffff8	sw	-8(r29),r31; push ret addr
 1539  000021ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 1540  000021f0  afa20000	sw	0(r29),r2
 1541  000021f4  afa30004	sw	4(r29),r3
 1542  000021f8  8fc10000	lw	r1,(r30)
 1543  000021fc  8fc20004	lw	r2,4(r30)
 1544  00002200  0022182c	sle	r3,r1,r2
 1545  00002204  14600008	bnez	r3,L109_LF2
 1546  00002208  54000000	nop; delay slot nop
 1547  0000220c  8fc10004	lw	r1,4(r30)
 1548  00002210          	L109_LF2:
 1549  00002210  08000004	j	L108_LF2
 1550  00002214  54000000	nop; delay slot nop
 1551  00002218          	L108_LF2:
 1552  00002218  8fa20000	lw	r2,0(r29)
 1553  0000221c  8fa30004	lw	r3,4(r29)
 1554  00002220  8fdffff8	lw	r31,-8(r30)
 1555  00002224  001ee820	add	r29,r0,r30
 1556  00002228  8fdefffc	lw	r30,-4(r30)
 1557  0000222c  4be00000	jr	r31
 1558  00002230  54000000	nop
 1559  00002234          	.endproc _min
 1560                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1561                      ;;;
 1562                      ;;; Most of the traps are called in files from libtraps.
 1565  00002234          	.align 2
 1566  00002234          	.proc _exit
 1567  00002234          	.global _exit
 1568  00002234          	_exit:
 1569  00002234  44000300	trap	#0x300
 1570  00002238  4be00000	jr	r31
 1571  0000223c  54000000	nop
 1572  00002240          	.endproc _exit
 1574                      ; for the benefit of gcc.
 1575  00002240          	.proc ___main
 1576  00002240          	.global ___main
 1577  00002240          	___main:
 1578  00002240  4be00000	jr	r31
 1579  00002244  54000000	nop
 1580  00002248          	.endproc ___main
 1581  00002248          	.text
 1582  00002248          	.global _etext
 1583  00002248          	_etext:
 1584  00002248          	.align 3
 1585  00002248          	.data
 1586  0000316d          	.global _edata
 1587  0000316d          	_edata:
